<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="server_8cpp" kind="file">
    <compoundname>server.cpp</compoundname>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/ipc.h</includes>
    <includes local="no">sys/shm.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">cstring</includes>
    <includes refid="definition_8h" local="yes">../../headers/definition.h</includes>
    <incdepgraph>
      <node id="347">
        <label>sys/shm.h</label>
      </node>
      <node id="349">
        <label>string</label>
      </node>
      <node id="344">
        <label>sources/server/server.cpp</label>
        <link refid="server.cpp"/>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
      </node>
      <node id="345">
        <label>sys/types.h</label>
      </node>
      <node id="346">
        <label>sys/ipc.h</label>
      </node>
      <node id="348">
        <label>iostream</label>
      </node>
      <node id="351">
        <label>../../headers/definition.h</label>
        <link refid="definition_8h"/>
      </node>
      <node id="350">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct__shareM" prot="public">_shareM</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="server_8cpp_1ad73ea60fc164d7d224a2499bd77a1f35" prot="public" static="no">
        <type>struct <ref refid="struct__shareM" kindref="compound">_shareM</ref></type>
        <definition>typedef struct _shareM shareMemory_t</definition>
        <argsstring></argsstring>
        <name>shareMemory_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/sources/server/server.cpp" line="73" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/server/server.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="server_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/sources/server/server.cpp" line="19" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/server/server.cpp" bodystart="19" bodyend="36"/>
        <references refid="struct__shareM_1ad57018c4c874c265b1dbfedba6c53e2c" compoundref="share__server_8h" startline="15">_shareM::id_code</references>
        <references refid="definition_8h_1abc8437510f986871fa5cdbcc7ca4bc31" compoundref="definition_8h" startline="35">ID_CONNECTION</references>
        <references refid="struct__shareM_1a30792c4b007e8273d3832fe2d5e70987" compoundref="share__server_8h" startline="14">_shareM::index</references>
        <references refid="struct__shareM_1a9b7627fd1c2693c3ecc662457fee4aba" compoundref="share__server_8h" startline="16">_shareM::tostring</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/ipc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/shm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../headers/definition.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*KEY_SHMEMORY*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__shareM" kindref="compound">_shareM</ref>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__shareM_1a30792c4b007e8273d3832fe2d5e70987" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*if<sp/>index<sp/>is<sp/>the<sp/>same<sp/>so<sp/>the<sp/>value<sp/>is<sp/>ever<sp/>read*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct__shareM_1ad57018c4c874c265b1dbfedba6c53e2c" kindref="member">id_code</ref>[16];</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct__shareM_1a9b7627fd1c2693c3ecc662457fee4aba" kindref="member">tostring</ref>[255];</highlight></codeline>
<codeline lineno="13"><highlight class="normal">};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="server_8cpp_1ad73ea60fc164d7d224a2499bd77a1f35" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__shareM" kindref="compound">_shareM</ref><sp/><ref refid="struct__shareM" kindref="compound">shareMemory_t</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="server_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="server_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(){</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__shareM" kindref="compound">shareMemory_t</ref><sp/>*data,<sp/>*data2;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>key_t<sp/>key;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shmid;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>key<sp/>=<sp/>ftok(</highlight><highlight class="stringliteral">&quot;server.cpp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>shmid<sp/>=<sp/>shmget(key,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__shareM" kindref="compound">shareMemory_t</ref>),<sp/>0444<sp/>|<sp/>IPC_CREAT);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>(<ref refid="struct__shareM" kindref="compound">shareMemory_t</ref>*)shmat(shmid,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)0,<sp/>0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(data-&gt;<ref refid="struct__shareM_1ad57018c4c874c265b1dbfedba6c53e2c" kindref="member">id_code</ref>,<sp/><ref refid="definition_8h_1abc8437510f986871fa5cdbcc7ca4bc31" kindref="member">ID_CONNECTION</ref>)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;IPC<sp/>Synchronized&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;data<sp/>id_code:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;data-&gt;<ref refid="struct__shareM_1ad57018c4c874c265b1dbfedba6c53e2c" kindref="member">id_code</ref>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;data<sp/>tostring:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;data-&gt;<ref refid="struct__shareM_1a9b7627fd1c2693c3ecc662457fee4aba" kindref="member">tostring</ref>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;data<sp/>index:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(int)data-&gt;<ref refid="struct__shareM_1a30792c4b007e8273d3832fe2d5e70987" kindref="member">index</ref>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/sources/server/server.cpp"/>
  </compounddef>
</doxygen>
