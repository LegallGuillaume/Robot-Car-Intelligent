<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="serveur_8cpp" kind="file">
    <compoundname>serveur.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="serveur_8h" local="yes">../headers/manager/serveur.h</includes>
    <includes refid="manager_8h" local="yes">../headers/manager.h</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="384">
        <label>manager/bloc.h</label>
        <link refid="bloc_8h"/>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
      </node>
      <node id="366">
        <label>sources/serveur.cpp</label>
        <link refid="serveur.cpp"/>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
      </node>
      <node id="376">
        <label>netinet/in.h</label>
      </node>
      <node id="377">
        <label>../serveur/client.h</label>
        <link refid="client_8h"/>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
      </node>
      <node id="388">
        <label>stdlib.h</label>
      </node>
      <node id="385">
        <label>../abstract/multipleobject.h</label>
        <link refid="multipleobject_8h"/>
        <childnode refid="378" relation="include">
        </childnode>
      </node>
      <node id="378">
        <label>string</label>
      </node>
      <node id="368">
        <label>../headers/manager/serveur.h</label>
        <link refid="serveur_8h"/>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
      </node>
      <node id="371">
        <label>cstdio</label>
      </node>
      <node id="380">
        <label>manager/car.h</label>
        <link refid="car_8h"/>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="374">
        <label>unistd.h</label>
      </node>
      <node id="370">
        <label>vector</label>
      </node>
      <node id="381">
        <label>utility</label>
      </node>
      <node id="383">
        <label>sstream</label>
      </node>
      <node id="372">
        <label>cstdlib</label>
      </node>
      <node id="379">
        <label>../headers/manager.h</label>
        <link refid="manager_8h"/>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
      </node>
      <node id="367">
        <label>iostream</label>
      </node>
      <node id="375">
        <label>sys/socket.h</label>
      </node>
      <node id="387">
        <label>manager/arrive.h</label>
        <link refid="arrive_8h"/>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="386">
        <label>manager/chemin.h</label>
        <link refid="chemin_8h"/>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
      </node>
      <node id="382">
        <label>../abstract/simpleobject.h</label>
        <link refid="simpleobject_8h"/>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
      </node>
      <node id="389">
        <label>algorithm</label>
      </node>
      <node id="369">
        <label>../definition.h</label>
        <link refid="definition_8h"/>
      </node>
      <node id="373">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../headers/manager/serveur.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../headers/manager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="classServeur" kindref="compound">Serveur</ref><sp/>*<sp/><ref refid="classServeur_1a489b673bfbcfa8f6909b793fe15e9cf7" kindref="member">Serveur::instance</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classServeur_1af45129123392e1bee01b09201945aab1" refkind="member"><highlight class="normal"><ref refid="classServeur" kindref="compound">Serveur</ref><sp/>*<sp/><ref refid="classServeur_1af45129123392e1bee01b09201945aab1" kindref="member">Serveur::getInstance</ref>(){</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classServeur_1a489b673bfbcfa8f6909b793fe15e9cf7" kindref="member">instance</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classServeur_1a489b673bfbcfa8f6909b793fe15e9cf7" kindref="member">instance</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classServeur_1a8a7a1df15a07e095436dedd0d40a0196" kindref="member">Serveur</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classServeur_1a489b673bfbcfa8f6909b793fe15e9cf7" kindref="member">instance</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classServeur_1a8a7a1df15a07e095436dedd0d40a0196" refkind="member"><highlight class="normal"><ref refid="classServeur_1a8a7a1df15a07e095436dedd0d40a0196" kindref="member">Serveur::Serveur</ref>(){</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;STARTING<sp/>SERVER<sp/>...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classServeur_1aff31b98591fc01c7deb0d1ad1052c4a3" kindref="member">serverSock</ref><sp/>=<sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>0);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;serverAddr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sockaddr_in));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>serverAddr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>serverAddr.sin_addr.s_addr<sp/>=<sp/>INADDR_ANY;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>serverAddr.sin_port<sp/>=<sp/>htons(<ref refid="definition_8h_1a752f5b785b69372034ac87e1a1598ce3" kindref="member">PORT_SERVEUR</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>setsockopt(<ref refid="classServeur_1aff31b98591fc01c7deb0d1ad1052c4a3" kindref="member">serverSock</ref>,SOL_SOCKET,SO_REUSEADDR,&amp;yes,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bind(<ref refid="classServeur_1aff31b98591fc01c7deb0d1ad1052c4a3" kindref="member">serverSock</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;serverAddr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sockaddr_in))<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>bind&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;<sp/></highlight><highlight class="comment">/*n&apos;est<sp/>pas<sp/>exécuté<sp/>avec<sp/>sudo*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;SERVER<sp/>CONNECTED\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classServeur_1a1c50d68dd630c95e89f0bb7467f818a6" kindref="member">clients</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;Client&gt;();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classServeur_1a1c50d68dd630c95e89f0bb7467f818a6" kindref="member">clients</ref>-&gt;reserve(<ref refid="definition_8h_1a5c060ba02a1c2de42097ec04c0da0ea7" kindref="member">MAX_CONNECTION_CLIENT</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>listen(<ref refid="classServeur_1aff31b98591fc01c7deb0d1ad1052c4a3" kindref="member">serverSock</ref>,<sp/>5);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classServeur_1a12d924e325b3fa6a65a4e70986114625" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classServeur_1a12d924e325b3fa6a65a4e70986114625" kindref="member">Serveur::AcceptAndDispatch</ref>(){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classClient" kindref="compound">Client</ref><sp/>*client;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>socklen_t<sp/>cliSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sockaddr_in);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classClient" kindref="compound">Client</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client-&gt;<ref refid="classClient_1a80564d281c880f1e80b6e1b54ae6e71e" kindref="member">m_sock</ref><sp/>=<sp/>accept(<ref refid="classServeur_1aff31b98591fc01c7deb0d1ad1052c4a3" kindref="member">serverSock</ref>,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;<ref refid="classServeur_1a326fa962e0672b4da2027f320d561e63" kindref="member">clientAddr</ref>,<sp/>&amp;cliSize);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(client-&gt;<ref refid="classClient_1a80564d281c880f1e80b6e1b54ae6e71e" kindref="member">m_sock</ref><sp/>&lt;<sp/>0<sp/>||<sp/><ref refid="classServeur_1a1c50d68dd630c95e89f0bb7467f818a6" kindref="member">clients</ref>-&gt;size()<sp/>&gt;=<sp/><ref refid="definition_8h_1a5c060ba02a1c2de42097ec04c0da0ea7" kindref="member">MAX_CONNECTION_CLIENT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>on<sp/>accept&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>client;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classServeur_1a01ac17dffbd9801773f89f033dfb7f0b" kindref="member">synchronizeClient</ref>(client)){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Client<sp/>not<sp/>valid&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classServeur_1a5307c171fde619d6441ba9d89aaa3b1a" kindref="member">sendToClient</ref>(client,<sp/>std::string(<ref refid="definition_8h_1a6360244e5a8f026f28f31db5966308b4" kindref="member">INVAL_CODE</ref>));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>client;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classServeur_1a1c50d68dd630c95e89f0bb7467f818a6" kindref="member">clients</ref>-&gt;push_back(*client);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Client<sp/>connected<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;client-&gt;<ref refid="classClient_1af29655fb85148cf9cff9c94af770c023" kindref="member">m_id</ref>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classServeur_1a5307c171fde619d6441ba9d89aaa3b1a" kindref="member">sendToClient</ref>(client,<sp/>std::string(<ref refid="definition_8h_1a812f73a3ea946dbc24662a8736f64e55" kindref="member">VAL_CODE</ref>));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(client-&gt;<ref refid="classClient_1af29655fb85148cf9cff9c94af770c023" kindref="member">m_id</ref><sp/>==<sp/><ref refid="definition_8h_1aecf05b6e6a060d8da044532e9db74e2f" kindref="member">ID_CAR</ref>){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>colision<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct__shareM_1a9b7627fd1c2693c3ecc662457fee4aba" kindref="member">tostring</ref><sp/>=<sp/><ref refid="classManager_1a5d783bd86e9be93235898a46de80847f" kindref="member">Manager::getInstance</ref>()-&gt;<ref refid="classManager_1a2803dff8e8f2912242f4098991d91415" kindref="member">car</ref>-&gt;<ref refid="classCar_1a20dd521474ee36b144bde58e3359eed6" kindref="member">getPosition</ref>().first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classManager_1a5d783bd86e9be93235898a46de80847f" kindref="member">Manager::getInstance</ref>()-&gt;<ref refid="classManager_1a2803dff8e8f2912242f4098991d91415" kindref="member">car</ref>-&gt;<ref refid="classCar_1a20dd521474ee36b144bde58e3359eed6" kindref="member">getPosition</ref>().second;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classServeur_1a5307c171fde619d6441ba9d89aaa3b1a" kindref="member">sendToClient</ref>(client,<sp/>colision<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>+<sp/>tostring<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classServeur_1a5307c171fde619d6441ba9d89aaa3b1a" kindref="member">sendToClient</ref>(client,<sp/><ref refid="classManager_1a5d783bd86e9be93235898a46de80847f" kindref="member">Manager::getInstance</ref>()-&gt;toString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>recep<sp/>=<sp/><ref refid="classServeur_1ae4c196fb5ff5fffe40d480e5575570d9" kindref="member">receive</ref>(client);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(recep<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&lt;STOP&gt;\n&quot;</highlight><highlight class="normal"><sp/>||<sp/>recep<sp/>==<sp/><ref refid="definition_8h_1ab172dfb54371246ff3b8edc32639c033" kindref="member">STOP_CONN</ref>){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;client<sp/>disconnected:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;client-&gt;<ref refid="classClient_1af29655fb85148cf9cff9c94af770c023" kindref="member">m_id</ref>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>client;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classServeur_1a5307c171fde619d6441ba9d89aaa3b1a" kindref="member">sendToClient</ref>(client,<sp/>std::string(<ref refid="definition_8h_1ab172dfb54371246ff3b8edc32639c033" kindref="member">STOP_CONN</ref>));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classServeur_1aa3084842ce1be2065239b1afcf384cc0" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="classServeur_1aa3084842ce1be2065239b1afcf384cc0" kindref="member">Serveur::sendToAll</ref>(std::string<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>nb_byte=0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i=0;<sp/>i&lt;<ref refid="classServeur_1a1c50d68dd630c95e89f0bb7467f818a6" kindref="member">clients</ref>-&gt;size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_byte<sp/>+=<sp/>send(<ref refid="classServeur_1a1c50d68dd630c95e89f0bb7467f818a6" kindref="member">clients</ref>-&gt;at(i).m_sock,<sp/>message.c_str(),<sp/>strlen(message.c_str()),<sp/>0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb_byte;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classServeur_1a5307c171fde619d6441ba9d89aaa3b1a" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="classServeur_1a5307c171fde619d6441ba9d89aaa3b1a" kindref="member">Serveur::sendToClient</ref>(<ref refid="classClient" kindref="compound">Client</ref><sp/>*client,<sp/>std::string<sp/>message){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>send(client-&gt;<ref refid="classClient_1a80564d281c880f1e80b6e1b54ae6e71e" kindref="member">m_sock</ref>,<sp/>message.c_str(),<sp/>strlen(message.c_str()),<sp/>0);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classServeur_1a8eed76b45aaa11b0a1f51ff133735dec" refkind="member"><highlight class="normal"><ref refid="classClient" kindref="compound">Client</ref><sp/><ref refid="classServeur_1a8eed76b45aaa11b0a1f51ff133735dec" kindref="member">Serveur::getClient</ref>(std::string<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/><ref refid="struct__shareM_1a30792c4b007e8273d3832fe2d5e70987" kindref="member">index</ref>=0;<sp/><ref refid="struct__shareM_1a30792c4b007e8273d3832fe2d5e70987" kindref="member">index</ref>&lt;<ref refid="classServeur_1a1c50d68dd630c95e89f0bb7467f818a6" kindref="member">clients</ref>-&gt;size();<sp/>++<ref refid="struct__shareM_1a30792c4b007e8273d3832fe2d5e70987" kindref="member">index</ref>){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classServeur_1a1c50d68dd630c95e89f0bb7467f818a6" kindref="member">clients</ref>-&gt;at(<ref refid="struct__shareM_1a30792c4b007e8273d3832fe2d5e70987" kindref="member">index</ref>).m_id<sp/>==<sp/>id)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classServeur_1a1c50d68dd630c95e89f0bb7467f818a6" kindref="member">clients</ref>-&gt;at(<ref refid="struct__shareM_1a30792c4b007e8273d3832fe2d5e70987" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classClient" kindref="compound">Client</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classServeur_1a01ac17dffbd9801773f89f033dfb7f0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classServeur_1a01ac17dffbd9801773f89f033dfb7f0b" kindref="member">Serveur::synchronizeClient</ref>(<ref refid="classClient" kindref="compound">Client</ref><sp/>*c){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classServeur_1a5307c171fde619d6441ba9d89aaa3b1a" kindref="member">sendToClient</ref>(c,<sp/>std::string(<ref refid="definition_8h_1adffc78b5b975243958cd1258f3cfb911" kindref="member">REQ_CODE</ref>));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="struct__shareM_1ad57018c4c874c265b1dbfedba6c53e2c" kindref="member">id_code</ref><sp/>=<sp/><ref refid="classServeur_1ae4c196fb5ff5fffe40d480e5575570d9" kindref="member">receive</ref>(c);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="classClient_1af29655fb85148cf9cff9c94af770c023" kindref="member">m_id</ref><sp/>=<sp/><ref refid="struct__shareM_1ad57018c4c874c265b1dbfedba6c53e2c" kindref="member">id_code</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(id_code<sp/>==<sp/><ref refid="definition_8h_1a0dec0c631f90a14aa6ff21617d54707a" kindref="member">ID_PC</ref><sp/>||<sp/>id_code<sp/>==<sp/><ref refid="definition_8h_1ad6b283a2d2326d0e040305c75ff08dc4" kindref="member">ID_REMOTE</ref><sp/>||<sp/>id_code<sp/>==<sp/><ref refid="definition_8h_1aecf05b6e6a060d8da044532e9db74e2f" kindref="member">ID_CAR</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classServeur_1ae4c196fb5ff5fffe40d480e5575570d9" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classServeur_1ae4c196fb5ff5fffe40d480e5575570d9" kindref="member">Serveur::receive</ref>(<ref refid="classClient" kindref="compound">Client</ref><sp/>*c){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="classServeur_1a8e6e5a2629cf14c4411b0fdae061444c" kindref="member">buffer</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="classServeur_1a8e6e5a2629cf14c4411b0fdae061444c" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(read(c-&gt;<ref refid="classClient_1a80564d281c880f1e80b6e1b54ae6e71e" kindref="member">m_sock</ref>,<sp/><ref refid="classServeur_1a8e6e5a2629cf14c4411b0fdae061444c" kindref="member">buffer</ref>,<sp/>255)<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(<ref refid="classServeur_1a8e6e5a2629cf14c4411b0fdae061444c" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/sources/serveur.cpp"/>
  </compounddef>
</doxygen>
