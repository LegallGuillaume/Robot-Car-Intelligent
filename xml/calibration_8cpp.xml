<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="calibration_8cpp" kind="file">
    <compoundname>calibration.cpp</compoundname>
    <includes local="yes">opencv2/highgui/highgui.hpp</includes>
    <includes local="yes">opencv2/imgproc/imgproc.hpp</includes>
    <includes refid="calibration_8h" local="yes">../../headers/traitement/calibration.h</includes>
    <includes refid="definition_8h" local="yes">../../headers/definition.h</includes>
    <includes refid="manager_8h" local="yes">../../headers/manager.h</includes>
    <includes local="no">string</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="434">
        <label>manager/bloc.h</label>
        <link refid="bloc_8h"/>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
      </node>
      <node id="424">
        <label>../../headers/traitement/calibration.h</label>
        <link refid="calibration_8h"/>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
      </node>
      <node id="438">
        <label>stdlib.h</label>
      </node>
      <node id="435">
        <label>../abstract/multipleobject.h</label>
        <link refid="multipleobject_8h"/>
        <childnode refid="431" relation="include">
        </childnode>
      </node>
      <node id="431">
        <label>string</label>
      </node>
      <node id="423">
        <label>opencv2/imgproc/imgproc.hpp</label>
      </node>
      <node id="430">
        <label>manager/car.h</label>
        <link refid="car_8h"/>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
      </node>
      <node id="426">
        <label>vector</label>
      </node>
      <node id="427">
        <label>utility</label>
      </node>
      <node id="433">
        <label>sstream</label>
      </node>
      <node id="421">
        <label>sources/traitement/calibration.cpp</label>
        <link refid="calibration.cpp"/>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
      </node>
      <node id="422">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="429">
        <label>../../headers/manager.h</label>
        <link refid="manager_8h"/>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
      </node>
      <node id="425">
        <label>iostream</label>
      </node>
      <node id="437">
        <label>manager/arrive.h</label>
        <link refid="arrive_8h"/>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
      </node>
      <node id="436">
        <label>manager/chemin.h</label>
        <link refid="chemin_8h"/>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
      </node>
      <node id="432">
        <label>../abstract/simpleobject.h</label>
        <link refid="simpleobject_8h"/>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
      </node>
      <node id="439">
        <label>algorithm</label>
      </node>
      <node id="428">
        <label>../../headers/definition.h</label>
        <link refid="definition_8h"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;opencv2/highgui/highgui.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;opencv2/imgproc/imgproc.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../headers/traitement/calibration.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../headers/definition.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../headers/manager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*uint8_t<sp/>unuint8_t*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cv;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classCalibration_1a420bea981d91ac69161e400644ec7dd8" refkind="member"><highlight class="normal"><ref refid="classCalibration_1a420bea981d91ac69161e400644ec7dd8" kindref="member">Calibration::Calibration</ref>(cv::VideoCapture<sp/>capVideo){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>calibrationColors<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;struct<sp/>ColorInfo&gt;();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>capture<sp/>=<sp/>capVideo;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>iLowH<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>iHighH<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>iLowS<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>iHighS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>iLowV<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>iHighV<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>scene<sp/>=<sp/><ref refid="classManager_1a5d783bd86e9be93235898a46de80847f" kindref="member">Manager::getInstance</ref>()-&gt;<ref refid="classManager_1a18e77e06ef097db9e010835e7930bd3f" kindref="member">getSceneCarrer</ref>();<sp/></highlight><highlight class="comment">/*<sp/>(matrice<sp/>127x127)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>to_calibX<sp/>=<sp/>(<ref refid="definition_8h_1ad2cc26b8da12f6603455f84312aa649b" kindref="member">CAM_WIDTH</ref><sp/>/<sp/>scene)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>to_calibY<sp/>=<sp/>(<ref refid="definition_8h_1ac88d2707293a4af9e155d57e3651162e" kindref="member">CAM_HEIGHT</ref><sp/>/<sp/>scene)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>rectangleCalib<sp/>=<sp/>Rect(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point((<ref refid="definition_8h_1ad2cc26b8da12f6603455f84312aa649b" kindref="member">CAM_WIDTH</ref><sp/>/<sp/>2)<sp/>-<sp/>to_calibX,<sp/>(<ref refid="definition_8h_1ac88d2707293a4af9e155d57e3651162e" kindref="member">CAM_HEIGHT</ref><sp/>/<sp/>2)<sp/>-<sp/>to_calibY),<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point((<ref refid="definition_8h_1ad2cc26b8da12f6603455f84312aa649b" kindref="member">CAM_WIDTH</ref><sp/>/<sp/>2)<sp/>+<sp/>to_calibX,<sp/>(<ref refid="definition_8h_1ac88d2707293a4af9e155d57e3651162e" kindref="member">CAM_HEIGHT</ref><sp/>/<sp/>2)<sp/>+<sp/>to_calibY)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classCalibration_1ac4bdcbef3a615877cbeed352ea74c312" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCalibration_1ac4bdcbef3a615877cbeed352ea74c312" kindref="member">Calibration::addColor</ref>(uint8_t<sp/>H_min,<sp/>uint8_t<sp/><sp/>H_max,<sp/>uint8_t<sp/><sp/>S_min,<sp/>uint8_t<sp/><sp/>S_max,<sp/>uint8_t<sp/><sp/>V_min,<sp/>uint8_t<sp/><sp/>V_max){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structColorInfo" kindref="compound">ColorInfo</ref><sp/>addcolor;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>addcolor.<ref refid="structColorInfo_1a5ceb201f85a16581f118c9e7ff83ff7f" kindref="member">iLowH</ref><sp/>=<sp/>H_min;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>addcolor.<ref refid="structColorInfo_1ad6e7d1e25ecafb83a725f9ca95704745" kindref="member">iHighH</ref><sp/>=<sp/>H_max;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>addcolor.<ref refid="structColorInfo_1a032b2484868139023c36cb2c7ae7dd9e" kindref="member">iLowS</ref><sp/>=<sp/>S_min;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>addcolor.<ref refid="structColorInfo_1afc281afa74af4b6bb6ff3dd12e62ea8d" kindref="member">iHighS</ref><sp/>=<sp/>S_max;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>addcolor.<ref refid="structColorInfo_1ab169dd6230117ce5c2d305c88313ac95" kindref="member">iLowV</ref><sp/>=<sp/>V_min;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>addcolor.<ref refid="structColorInfo_1af5f021160be39927fb5de69696b95a3b" kindref="member">iHighV</ref><sp/>=<sp/>V_max;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>calibrationColors-&gt;push_back(addcolor);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classCalibration_1a0eb486ca50923fab9a39d4403c18d4cf" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classCalibration_1a0eb486ca50923fab9a39d4403c18d4cf" kindref="member">Calibration::minC</ref>(uint8_t<sp/>min,<sp/>uint8_t<sp/>compare,<sp/>int8_t<sp/>marge){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Value<sp/>min,<sp/>compare,<sp/>marge<sp/>=&gt;&quot;</highlight><highlight class="normal">&lt;&lt;(int)min&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)compare&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(int)marge&lt;&lt;endl;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(min-marge<sp/>&gt;=<sp/>0){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(compare<sp/>&gt;=<sp/>min-marge)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classCalibration_1a26be0ee9644bd758d60a22ffe1281bd6" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classCalibration_1a26be0ee9644bd758d60a22ffe1281bd6" kindref="member">Calibration::maxC</ref>(uint8_t<sp/>max,<sp/>uint8_t<sp/>compare,<sp/>int8_t<sp/>marge){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Value<sp/>max,<sp/>compare,<sp/>marge<sp/>=&gt;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(int)max&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)compare&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(int)marge&lt;&lt;endl;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(max+marge<sp/>&lt;<sp/>256){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(max+marge<sp/>&lt;=<sp/>compare)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classCalibration_1ac016f08b033ba23b3036a87ab610946f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCalibration_1ac016f08b033ba23b3036a87ab610946f" kindref="member">Calibration::filtreC</ref>(){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>Hl=0,<sp/>Hh=0,<sp/>Sl=0,<sp/>Sh=0,<sp/>Vl=0,<sp/>Vh=0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>size<sp/>=<sp/>calibrationColors-&gt;size();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;int8_t&gt;<sp/>ref_todel;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>marge<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int8_t<sp/>index<sp/>=<sp/>2;<sp/>index&lt;size-2;<sp/>++index){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hl<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index-2).iLowH<sp/>+<sp/>calibrationColors-&gt;at(index-1).iLowH<sp/>+<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index).iLowH<sp/>+<sp/>calibrationColors-&gt;at(index+1).iLowH<sp/>+<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index+2).iLowH</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)/5;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hh<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index-2).iHighH<sp/>+<sp/>calibrationColors-&gt;at(index-1).iHighH<sp/>+<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index).iHighH<sp/>+<sp/>calibrationColors-&gt;at(index+1).iHighH<sp/>+<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index+2).iHighH</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)/5;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sl<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index-2).iLowS<sp/>+<sp/>calibrationColors-&gt;at(index-1).iLowS<sp/>+<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index).iLowS<sp/>+<sp/>calibrationColors-&gt;at(index+1).iLowS<sp/>+<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index+2).iLowS</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)/5;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sh<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index-2).iHighS<sp/>+<sp/>calibrationColors-&gt;at(index-1).iHighS<sp/>+<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index).iHighS<sp/>+<sp/>calibrationColors-&gt;at(index+1).iHighS<sp/>+<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index+2).iHighS</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)/5;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vl<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index-2).iLowV<sp/>+<sp/>calibrationColors-&gt;at(index-1).iLowV<sp/>+<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index).iLowV<sp/>+<sp/>calibrationColors-&gt;at(index+1).iLowV<sp/>+<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index+2).iLowV</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)/5;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vh<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index-2).iHighV<sp/>+<sp/>calibrationColors-&gt;at(index-1).iHighV<sp/>+<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index).iHighV<sp/>+<sp/>calibrationColors-&gt;at(index+1).iHighV<sp/>+<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;at(index+2).iHighV</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)/5;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int8_t<sp/>ref<sp/>=<sp/>0;<sp/>ref<sp/>&lt;<sp/>4;<sp/>++ref){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hl-marge<sp/>&gt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iLowH<sp/>&amp;&amp;<sp/>Hl+marge<sp/>&lt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iLowH){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_todel.push_back(index-(ref-2));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hl-marge<sp/>&gt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iHighH<sp/>&amp;&amp;<sp/>Hl+marge<sp/>&lt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iHighH){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_todel.push_back(index-(ref-2));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hl-marge<sp/>&gt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iLowS<sp/>&amp;&amp;<sp/>Hl+marge<sp/>&lt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iLowS){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_todel.push_back(index-(ref-2));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hl-marge<sp/>&gt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iHighS<sp/>&amp;&amp;<sp/>Hl+marge<sp/>&lt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iHighS){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_todel.push_back(index-(ref-2));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hl-marge<sp/>&gt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iLowV<sp/>&amp;&amp;<sp/>Hl+marge<sp/>&lt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iLowV){</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_todel.push_back(index-(ref-2));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Hl-marge<sp/>&gt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iHighV<sp/>&amp;&amp;<sp/>Hl+marge<sp/>&lt;=<sp/>calibrationColors-&gt;at(index-(ref-2)).iHighV){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref_todel.push_back(index-(ref-2));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int8_t<sp/>index<sp/>=<sp/>0;<sp/>index&lt;ref_todel.size();<sp/>++index)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibrationColors-&gt;erase(calibrationColors-&gt;begin()+ref_todel.at(index));</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classCalibration_1adef7ee6cc7d95ea809c1cccd4d41ce02" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCalibration_1adef7ee6cc7d95ea809c1cccd4d41ce02" kindref="member">Calibration::defineHSV</ref>(){</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>marge<sp/>=<sp/>15;<sp/></highlight><highlight class="comment">/*+-<sp/>15<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>filtreC();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int8_t<sp/>index<sp/>=<sp/>0;<sp/>index&lt;calibrationColors-&gt;size();<sp/>++index){</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structColorInfo_1a5ceb201f85a16581f118c9e7ff83ff7f" kindref="member">iLowH</ref><sp/>=<sp/>minC(<ref refid="structColorInfo_1a5ceb201f85a16581f118c9e7ff83ff7f" kindref="member">iLowH</ref>,<sp/>calibrationColors-&gt;at(index).iLowH,<sp/>marge);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structColorInfo_1ad6e7d1e25ecafb83a725f9ca95704745" kindref="member">iHighH</ref><sp/>=<sp/>maxC(iHighH,<sp/>calibrationColors-&gt;at(index).iHighH,<sp/>marge);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structColorInfo_1a032b2484868139023c36cb2c7ae7dd9e" kindref="member">iLowS</ref><sp/>=<sp/>minC(iLowS,<sp/>calibrationColors-&gt;at(index).iLowS,<sp/>marge);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structColorInfo_1afc281afa74af4b6bb6ff3dd12e62ea8d" kindref="member">iHighS</ref><sp/>=<sp/>maxC(iHighS,<sp/>calibrationColors-&gt;at(index).iHighS,<sp/>marge);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structColorInfo_1ab169dd6230117ce5c2d305c88313ac95" kindref="member">iLowV</ref><sp/>=<sp/>minC(iLowV,<sp/>calibrationColors-&gt;at(index).iLowV,<sp/>marge);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structColorInfo_1af5f021160be39927fb5de69696b95a3b" kindref="member">iHighV</ref><sp/>=<sp/>maxC(iHighV,<sp/>calibrationColors-&gt;at(index).iHighV,<sp/>marge);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;DEFINE<sp/>HSV:<sp/>\nHlow<sp/>%d,<sp/>Hhigh<sp/>%d,<sp/>Slow<sp/>%d,<sp/>SHigh<sp/>%d,<sp/>VLow<sp/>%d,<sp/>VHigh<sp/>%d\n\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structColorInfo_1a5ceb201f85a16581f118c9e7ff83ff7f" kindref="member">iLowH</ref>,<sp/><ref refid="structColorInfo_1ad6e7d1e25ecafb83a725f9ca95704745" kindref="member">iHighH</ref>,<sp/><ref refid="structColorInfo_1a032b2484868139023c36cb2c7ae7dd9e" kindref="member">iLowS</ref>,<sp/><ref refid="structColorInfo_1afc281afa74af4b6bb6ff3dd12e62ea8d" kindref="member">iHighS</ref>,<sp/><ref refid="structColorInfo_1ab169dd6230117ce5c2d305c88313ac95" kindref="member">iLowV</ref>,<sp/><ref refid="structColorInfo_1af5f021160be39927fb5de69696b95a3b" kindref="member">iHighV</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classCalibration_1ad8250297ea60fa9c0ad1e38a70cca880" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCalibration_1ad8250297ea60fa9c0ad1e38a70cca880" kindref="member">Calibration::search</ref>(cv::Mat<sp/>HSVframe){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>H_values,<sp/>S_values,<sp/>V_values;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>rectangleCalib.x;<sp/>x&lt;rectangleCalib.x<sp/>+<sp/>rectangleCalib.width;<sp/>++x){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>rectangleCalib.y;<sp/>y&lt;rectangleCalib.y<sp/>+<sp/>rectangleCalib.height;<sp/>++y){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_values.push_back((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)HSVframe.at&lt;cv::Vec3b&gt;(y,<sp/>x)[0]);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_values.push_back((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)HSVframe.at&lt;cv::Vec3b&gt;(y,<sp/>x)[1]);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_values.push_back((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)HSVframe.at&lt;cv::Vec3b&gt;(y,<sp/>x)[2]);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>H_min=0,<sp/>H_max=0,<sp/>S_min=0,<sp/>S_max=0,<sp/>V_min=0,<sp/>V_max=0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(H_values.size()&gt;0<sp/>||<sp/>S_values.size()&gt;0<sp/>||<sp/>V_values.size()&gt;0){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_min<sp/>=<sp/>*std::min_element(H_values.begin(),<sp/>H_values.end());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H_max<sp/>=<sp/>*std::max_element(H_values.begin(),<sp/>H_values.end());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_min<sp/>=<sp/>*std::min_element(S_values.begin(),<sp/>S_values.end());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_max<sp/>=<sp/>*std::max_element(S_values.begin(),<sp/>S_values.end());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_min<sp/>=<sp/>*std::min_element(V_values.begin(),<sp/>V_values.end());</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_max<sp/>=<sp/>*std::max_element(V_values.begin(),<sp/>V_values.end());</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addColor(H_min,<sp/>H_max,<sp/>S_min,<sp/>S_max,<sp/>V_min,<sp/>V_max);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classCalibration_1a066922eb7b40419ed4f850b3c6b4148d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCalibration_1a066922eb7b40419ed4f850b3c6b4148d" kindref="member">Calibration::start</ref>(){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/>cameraFeed;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/>HSV;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i=0;<sp/>i&lt;ECHANTILLION_CALIB;++i){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capture.read(cameraFeed);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cvtColor(cameraFeed,<sp/>HSV,<sp/>COLOR_BGR2HSV);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search(HSV);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>defineHSV();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Hlow<sp/>%d,<sp/>Hhigh<sp/>%d,<sp/>Slow<sp/>%d,<sp/>SHigh<sp/>%d,<sp/>VLow<sp/>%d,<sp/>VHigh<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structColorInfo_1a5ceb201f85a16581f118c9e7ff83ff7f" kindref="member">iLowH</ref>,<sp/><ref refid="structColorInfo_1ad6e7d1e25ecafb83a725f9ca95704745" kindref="member">iHighH</ref>,<sp/><ref refid="structColorInfo_1a032b2484868139023c36cb2c7ae7dd9e" kindref="member">iLowS</ref>,<sp/><ref refid="structColorInfo_1afc281afa74af4b6bb6ff3dd12e62ea8d" kindref="member">iHighS</ref>,<sp/><ref refid="structColorInfo_1ab169dd6230117ce5c2d305c88313ac95" kindref="member">iLowV</ref>,<sp/><ref refid="structColorInfo_1af5f021160be39927fb5de69696b95a3b" kindref="member">iHighV</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/sources/traitement/calibration.cpp"/>
  </compounddef>
</doxygen>
