<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classBloc" kind="class" prot="public">
    <compoundname>Bloc</compoundname>
    <basecompoundref refid="classMultipleObject" prot="public" virt="non-virtual">MultipleObject</basecompoundref>
    <includes refid="bloc_8h" local="no">bloc.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classBloc_1a51ad89062b91675830e0285f992f3210" prot="public" static="no" mutable="no">
        <type>vector&lt; pair&lt; int8_t, int8_t &gt; &gt; *</type>
        <definition>vector&lt;pair&lt;int8_t,int8_t&gt; &gt;* Bloc::list_bloc</definition>
        <argsstring></argsstring>
        <name>list_bloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="31" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" bodystart="31" bodyend="-1"/>
        <referencedby refid="classBloc_1a02db4c95699ce40e8ad671ef759ebdb7" compoundref="bloc_8cpp" startline="16" endline="19">add</referencedby>
        <referencedby refid="classCore_1ae03caf8d8abe9d4c3b875c6f6a5d40dd" compoundref="core_8cpp" startline="18" endline="61">Core::drawDebug</referencedby>
        <referencedby refid="classBloc_1a03799c83e18411ab4ae4bf3e03aec975" compoundref="bloc_8cpp" startline="29" endline="31">has</referencedby>
        <referencedby refid="classBloc_1a259248faed302444ba5424cdf6178681" compoundref="bloc_8cpp" startline="21" endline="27">remove</referencedby>
        <referencedby refid="classBloc_1a040af8a2aefc1acaa0e2d9bfc5943fa3" compoundref="bloc_8cpp" startline="33" endline="45">toString</referencedby>
        <referencedby refid="classManager_1af43da42550bd9746c5ea61a6aeee80de" compoundref="manager_8cpp" startline="15" endline="37">Manager::update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classBloc_1a39298425a48bcca70e70464f51193507" prot="private" static="yes" mutable="no">
        <type><ref refid="classBloc" kindref="compound">Bloc</ref> *</type>
        <definition>Bloc * Bloc::instance</definition>
        <argsstring></argsstring>
        <name>instance</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="56" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" bodystart="56" bodyend="-1"/>
        <referencedby refid="classBloc_1af357c5eeff01b5b41d983b1e42f5c115" compoundref="bloc_8cpp" startline="9" endline="14">getInstance</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBloc_1af357c5eeff01b5b41d983b1e42f5c115" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBloc" kindref="compound">Bloc</ref> *</type>
        <definition>Bloc * Bloc::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="30" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/bloc.cpp" bodystart="9" bodyend="14"/>
        <references refid="classBloc_1ae3ac5cbad6363c4ab56262a94d0b982e" compoundref="bloc_8h" startline="57" endline="60">Bloc</references>
        <references refid="classBloc_1a39298425a48bcca70e70464f51193507" compoundref="bloc_8h" startline="56">instance</references>
        <referencedby refid="classManager_1a1658ff9f18e38ccd9cb8b0b371b9c20b" compoundref="manager_8h" startline="164" endline="172">Manager::Manager</referencedby>
        <referencedby refid="unitest_8cpp_1a8fe7cee2b1a0e3b6c36ff74b48615626" compoundref="unitest_8cpp" startline="21" endline="75">unitest_pathfinding</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBloc_1a02db4c95699ce40e8ad671ef759ebdb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Bloc::add</definition>
        <argsstring>(int8_t x, int8_t y) override</argsstring>
        <name>add</name>
        <reimplements refid="classMultipleObject_1aa5e743143bdedeb901c8e234162b3db1">add</reimplements>
        <param>
          <type>int8_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="32" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/bloc.cpp" bodystart="16" bodyend="19"/>
        <references refid="classBloc_1a51ad89062b91675830e0285f992f3210" compoundref="bloc_8h" startline="31">list_bloc</references>
        <referencedby refid="classCore_1a8648fac82f0324cead88c8fa2731b286" compoundref="core_8cpp" startline="193" endline="212">Core::blockProcessing</referencedby>
        <referencedby refid="unitest_8cpp_1a8fe7cee2b1a0e3b6c36ff74b48615626" compoundref="unitest_8cpp" startline="21" endline="75">unitest_pathfinding</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBloc_1a259248faed302444ba5424cdf6178681" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Bloc::remove</definition>
        <argsstring>(int8_t x, int8_t y) override</argsstring>
        <name>remove</name>
        <reimplements refid="classMultipleObject_1ad57dd5fec65953bbce399afdca475a4c">remove</reimplements>
        <param>
          <type>int8_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="33" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/bloc.cpp" bodystart="21" bodyend="27"/>
        <references refid="classBloc_1a03799c83e18411ab4ae4bf3e03aec975" compoundref="bloc_8cpp" startline="29" endline="31">has</references>
        <references refid="classBloc_1a51ad89062b91675830e0285f992f3210" compoundref="bloc_8h" startline="31">list_bloc</references>
        <referencedby refid="unitest_8cpp_1a8fe7cee2b1a0e3b6c36ff74b48615626" compoundref="unitest_8cpp" startline="21" endline="75">unitest_pathfinding</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBloc_1a8e62a350fb01ea58c9a8bb4deb08639e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bloc::set</definition>
        <argsstring>(std::vector&lt; std::pair&lt; int8_t, int8_t &gt;&gt; list)</argsstring>
        <name>set</name>
        <param>
          <type>std::vector&lt; std::pair&lt; int8_t, int8_t &gt;&gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="34" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" bodystart="34" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classBloc_1a03799c83e18411ab4ae4bf3e03aec975" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Bloc::has</definition>
        <argsstring>(int8_t x, int8_t y) override</argsstring>
        <name>has</name>
        <reimplements refid="classMultipleObject_1a1703b0c461708fbb6985e87624f4b17b">has</reimplements>
        <param>
          <type>int8_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="42" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/bloc.cpp" bodystart="29" bodyend="31"/>
        <references refid="classBloc_1a51ad89062b91675830e0285f992f3210" compoundref="bloc_8h" startline="31">list_bloc</references>
        <referencedby refid="classBloc_1a259248faed302444ba5424cdf6178681" compoundref="bloc_8cpp" startline="21" endline="27">remove</referencedby>
        <referencedby refid="unitest_8cpp_1a8fe7cee2b1a0e3b6c36ff74b48615626" compoundref="unitest_8cpp" startline="21" endline="75">unitest_pathfinding</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBloc_1afa48be18bb2cd4e3240f4a165abef1c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Bloc::clear</definition>
        <argsstring>() override</argsstring>
        <name>clear</name>
        <reimplements refid="classMultipleObject_1a980acdfb99e25ec0d5e61396f60517c3">clear</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="43" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" bodystart="43" bodyend="46"/>
        <referencedby refid="classManager_1a8cb433965677ad622ee43d59e24262e7" compoundref="manager_8cpp" startline="73" endline="79">Manager::reset</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBloc_1a040af8a2aefc1acaa0e2d9bfc5943fa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string Bloc::toString</definition>
        <argsstring>() override</argsstring>
        <name>toString</name>
        <reimplements refid="classMultipleObject_1a5439a2ac4cc86c759ef1df8f6059947a">toString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="47" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/bloc.cpp" bodystart="33" bodyend="45"/>
        <references refid="classBloc_1a51ad89062b91675830e0285f992f3210" compoundref="bloc_8h" startline="31">list_bloc</references>
        <referencedby refid="classManager_1abfd21eccf46a73165312fb71293affc3" compoundref="manager_8cpp" startline="60" endline="70">Manager::toString</referencedby>
        <referencedby refid="unitest_8cpp_1a8fe7cee2b1a0e3b6c36ff74b48615626" compoundref="unitest_8cpp" startline="21" endline="75">unitest_pathfinding</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBloc_1a1f40a68b1acb741fc91e07bbaa61dc22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bloc::~Bloc</definition>
        <argsstring>()</argsstring>
        <name>~Bloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="48" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" bodystart="48" bodyend="53"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBloc_1ae3ac5cbad6363c4ab56262a94d0b982e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bloc::Bloc</definition>
        <argsstring>()</argsstring>
        <name>Bloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="57" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" bodystart="57" bodyend="60"/>
        <references refid="definition_8h_1a9ddbbce2fd669544c295551b85ca01ff" compoundref="definition_8h" startline="19">MAX_BLOC_SCENE</references>
        <referencedby refid="classBloc_1af357c5eeff01b5b41d983b1e42f5c115" compoundref="bloc_8cpp" startline="9" endline="14">getInstance</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="8">
        <label>Bloc</label>
        <link refid="classBloc"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>MultipleObject</label>
        <link refid="classMultipleObject"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14">
        <label>T</label>
      </node>
      <node id="13">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>Bloc</label>
        <link refid="classBloc"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>-instance</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+list_bloc</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>MultipleObject</label>
        <link refid="classMultipleObject"/>
      </node>
      <node id="12">
        <label>std::vector&lt; pair&lt; int8_t, int8_t &gt; &gt;</label>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; pair&lt; int8_t, int8_t &gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" line="27" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/bloc.h" bodystart="27" bodyend="61"/>
    <listofallmembers>
      <member refid="classBloc_1a02db4c95699ce40e8ad671ef759ebdb7" prot="public" virt="virtual"><scope>Bloc</scope><name>add</name></member>
      <member refid="classBloc_1ae3ac5cbad6363c4ab56262a94d0b982e" prot="private" virt="non-virtual"><scope>Bloc</scope><name>Bloc</name></member>
      <member refid="classBloc_1afa48be18bb2cd4e3240f4a165abef1c8" prot="public" virt="virtual"><scope>Bloc</scope><name>clear</name></member>
      <member refid="classBloc_1af357c5eeff01b5b41d983b1e42f5c115" prot="public" virt="non-virtual"><scope>Bloc</scope><name>getInstance</name></member>
      <member refid="classBloc_1a03799c83e18411ab4ae4bf3e03aec975" prot="public" virt="virtual"><scope>Bloc</scope><name>has</name></member>
      <member refid="classBloc_1a39298425a48bcca70e70464f51193507" prot="private" virt="non-virtual"><scope>Bloc</scope><name>instance</name></member>
      <member refid="classBloc_1a51ad89062b91675830e0285f992f3210" prot="public" virt="non-virtual"><scope>Bloc</scope><name>list_bloc</name></member>
      <member refid="classBloc_1a259248faed302444ba5424cdf6178681" prot="public" virt="virtual"><scope>Bloc</scope><name>remove</name></member>
      <member refid="classBloc_1a8e62a350fb01ea58c9a8bb4deb08639e" prot="public" virt="non-virtual"><scope>Bloc</scope><name>set</name></member>
      <member refid="classBloc_1a040af8a2aefc1acaa0e2d9bfc5943fa3" prot="public" virt="virtual"><scope>Bloc</scope><name>toString</name></member>
      <member refid="classBloc_1a1f40a68b1acb741fc91e07bbaa61dc22" prot="public" virt="non-virtual"><scope>Bloc</scope><name>~Bloc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
