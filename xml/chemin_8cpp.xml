<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="chemin_8cpp" kind="file">
    <compoundname>chemin.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">sstream</includes>
    <includes refid="chemin_8h" local="yes">../headers/manager/chemin.h</includes>
    <includes refid="definition_8h" local="yes">../headers/definition.h</includes>
    <incdepgraph>
      <node id="291">
        <label>sources/chemin.cpp</label>
        <link refid="chemin.cpp"/>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
      </node>
      <node id="299">
        <label>../abstract/multipleobject.h</label>
        <link refid="multipleobject_8h"/>
        <childnode refid="298" relation="include">
        </childnode>
      </node>
      <node id="298">
        <label>string</label>
      </node>
      <node id="297">
        <label>vector</label>
      </node>
      <node id="296">
        <label>utility</label>
      </node>
      <node id="294">
        <label>sstream</label>
      </node>
      <node id="292">
        <label>iostream</label>
      </node>
      <node id="295">
        <label>../headers/manager/chemin.h</label>
        <link refid="chemin_8h"/>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>algorithm</label>
      </node>
      <node id="300">
        <label>../headers/definition.h</label>
        <link refid="definition_8h"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../headers/manager/chemin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../headers/definition.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="classChemin" kindref="compound">Chemin</ref><sp/>*<sp/><ref refid="classChemin_1a068df8f068a5609d0e2db8442f5e3a38" kindref="member">Chemin::instance</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classChemin_1a82bfca776ad8bd221a5a430526f1d41f" refkind="member"><highlight class="normal"><ref refid="classChemin" kindref="compound">Chemin</ref><sp/>*<sp/><ref refid="classChemin_1a82bfca776ad8bd221a5a430526f1d41f" kindref="member">Chemin::getInstance</ref>(){</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classChemin_1a068df8f068a5609d0e2db8442f5e3a38" kindref="member">instance</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classChemin_1a068df8f068a5609d0e2db8442f5e3a38" kindref="member">instance</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classChemin_1a5858339cc57c83e756c8412764990f16" kindref="member">Chemin</ref>();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classChemin_1a068df8f068a5609d0e2db8442f5e3a38" kindref="member">instance</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classChemin_1a2ee7b6a34082453fbdf890a49017aead" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classChemin_1a2ee7b6a34082453fbdf890a49017aead" kindref="member">Chemin::add</ref>(int8_t<sp/>x,<sp/>int8_t<sp/>y){</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;push_back(std::make_pair(x,y));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::find(<ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;begin(),<sp/><ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;end(),<sp/>std::make_pair(x,y))<sp/>!=<sp/><ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;end();</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classChemin_1a1ee3f200283c2c401ef0ffd5800d946c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classChemin_1a1ee3f200283c2c401ef0ffd5800d946c" kindref="member">Chemin::remove</ref>(int8_t<sp/>x,<sp/>int8_t<sp/>y){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classChemin_1aceccf541a2cdde27eb8f4bf541aff1b3" kindref="member">has</ref>(x,y)){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;erase(std::remove(<ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;begin(),<sp/><ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;end(),<sp/>std::make_pair(x,y)),<sp/><ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;end());</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="classChemin_1aceccf541a2cdde27eb8f4bf541aff1b3" kindref="member">has</ref>(x,y);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//default<sp/>true<sp/>if<sp/>isn&apos;t<sp/>in<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classChemin_1aceccf541a2cdde27eb8f4bf541aff1b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classChemin_1aceccf541a2cdde27eb8f4bf541aff1b3" kindref="member">Chemin::has</ref>(int8_t<sp/>x,<sp/>int8_t<sp/>y){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::find(<ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;begin(),<sp/><ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;end(),<sp/>std::make_pair(x,y))<sp/>!=<sp/><ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;end();</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classChemin_1a3b1754233eb79fb9f7d119a42efbda3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classChemin_1a3b1754233eb79fb9f7d119a42efbda3c" kindref="member">Chemin::toString</ref>(){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>size<sp/>=<sp/><ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;size();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>stringstream<sp/>value;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>i<sp/>=0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::for_each(<ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;begin(),<sp/><ref refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" kindref="member">list_chemin</ref>-&gt;end(),<sp/>[&amp;](std::pair&lt;int8_t,<sp/>int8_t&gt;<sp/>_b){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">&lt;&lt;i&lt;&lt;</highlight><highlight class="stringliteral">&quot;\&quot;:<sp/>\&quot;&quot;</highlight><highlight class="normal">&lt;&lt;(int)_b.first&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)_b.second&lt;&lt;</highlight><highlight class="stringliteral">&quot;\&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>stringstream<sp/>buf;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>\&quot;Chemin\&quot;:<sp/>{<sp/>\&quot;Number\&quot;:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;size&lt;&lt;</highlight><highlight class="stringliteral">&quot;,<sp/>\&quot;Position\&quot;:<sp/>{&quot;</highlight><highlight class="normal">&lt;&lt;value.str().substr(0,<sp/>value.str().size()-2)&lt;&lt;</highlight><highlight class="stringliteral">&quot;}<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.str();</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/sources/chemin.cpp"/>
  </compounddef>
</doxygen>
