<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="sserver_8cpp" kind="file">
    <compoundname>sserver.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="yes">../../headers/serveur/share_server.h</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">cstring</includes>
    <incdepgraph>
      <node id="667">
        <label>../../headers/serveur/share_server.h</label>
      </node>
      <node id="668">
        <label>string</label>
      </node>
      <node id="669">
        <label>sstream</label>
      </node>
      <node id="666">
        <label>iostream</label>
      </node>
      <node id="665">
        <label>sources/server/sserver.cpp</label>
        <link refid="sserver.cpp"/>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
      </node>
      <node id="670">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="sserver_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/sources/server/sserver.cpp" line="41" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/server/sserver.cpp" bodystart="41" bodyend="50"/>
        <references refid="classs_server_1af98a4a292c1beaab9296a88dba9f0c13" compoundref="sserver_8cpp" startline="15" endline="20">sServer::getInstance</references>
        <references refid="classs_server_1abcd4016d1b93c045f0847a48afee0ac2" compoundref="sserver_8cpp" startline="33" endline="38">sServer::sendThingsTo</references>
        <references refid="definition_8h_1a0dec0c631f90a14aa6ff21617d54707a" compoundref="definition_8h" startline="33">ID_PC</references>
        <references refid="definition_8h_1aecf05b6e6a060d8da044532e9db74e2f" compoundref="definition_8h" startline="34">ID_CAR</references>
        <references refid="definition_8h_1ad6b283a2d2326d0e040305c75ff08dc4" compoundref="definition_8h" startline="35">ID_REMOTE</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../headers/serveur/share_server.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*https://users.cs.cf.ac.uk/Dave.Marshall/C/node27.html*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="classs_server" kindref="compound">sServer</ref><sp/>*<sp/>sServer::instance<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classs_server_1af98a4a292c1beaab9296a88dba9f0c13" refkind="member"><highlight class="normal"><ref refid="classs_server" kindref="compound">sServer</ref>*<sp/><ref refid="classs_server_1af98a4a292c1beaab9296a88dba9f0c13" kindref="member">sServer::getInstance</ref>(){</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(instance<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classs_server" kindref="compound">sServer</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">sServer::sServer(){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>data_send<sp/>=<sp/>(<ref refid="struct__share_m" kindref="compound">shareMemory_t</ref>*)std::malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__share_m" kindref="compound">shareMemory_t</ref>));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>data_send-&gt;<ref refid="struct__share_m_1a30792c4b007e8273d3832fe2d5e70987" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>key_send<sp/>=<sp/>ftok(</highlight><highlight class="stringliteral">&quot;server.cpp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>shmid_send<sp/>=<sp/>shmget(key_send,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__share_m" kindref="compound">shareMemory_t</ref>),<sp/>0644<sp/>|<sp/>IPC_CREAT);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>data_send<sp/>=<sp/>(<ref refid="struct__share_m" kindref="compound">shareMemory_t</ref>*)shmat(shmid_send,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)0,<sp/>0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classs_server_1abcd4016d1b93c045f0847a48afee0ac2" kindref="member">sendThingsTo</ref>(<ref refid="definition_8h_1abc8437510f986871fa5cdbcc7ca4bc31" kindref="member">ID_CONNECTION</ref>,<sp/><ref refid="definition_8h_1a21b057a10e6f83a147922faf49652ac5" kindref="member">INTER_PROC</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classs_server_1abcd4016d1b93c045f0847a48afee0ac2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classs_server_1abcd4016d1b93c045f0847a48afee0ac2" kindref="member">sServer::sendThingsTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*id_code,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg){</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>index<sp/>=<sp/>data_send-&gt;<ref refid="struct__share_m_1a30792c4b007e8273d3832fe2d5e70987" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(data_send-&gt;<ref refid="struct__share_m_1aba5b7eea37d1a2b8eade0ea20ad1b4d8" kindref="member">id_code</ref>,<sp/>id_code);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(data_send-&gt;<ref refid="struct__share_m_1a3f1adf9dcef316bf853e709401b041fd" kindref="member">tostring</ref>,<sp/>msg);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>data_send-&gt;<ref refid="struct__share_m_1a30792c4b007e8273d3832fe2d5e70987" kindref="member">index</ref><sp/>=<sp/>index<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="sserver_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sserver_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(){</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classs_server" kindref="compound">sServer</ref><sp/>*serv<sp/>=<sp/><ref refid="classs_server_1af98a4a292c1beaab9296a88dba9f0c13" kindref="member">sServer::getInstance</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(5);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>serv-&gt;<ref refid="classs_server_1abcd4016d1b93c045f0847a48afee0ac2" kindref="member">sendThingsTo</ref>(<ref refid="definition_8h_1a0dec0c631f90a14aa6ff21617d54707a" kindref="member">ID_PC</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{ID:<sp/>\&quot;TEST\&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(5);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>serv-&gt;<ref refid="classs_server_1abcd4016d1b93c045f0847a48afee0ac2" kindref="member">sendThingsTo</ref>(<ref refid="definition_8h_1aecf05b6e6a060d8da044532e9db74e2f" kindref="member">ID_CAR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{SCENE:<sp/>\&quot;1BLOC\&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(5);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>serv-&gt;<ref refid="classs_server_1abcd4016d1b93c045f0847a48afee0ac2" kindref="member">sendThingsTo</ref>(<ref refid="definition_8h_1ad6b283a2d2326d0e040305c75ff08dc4" kindref="member">ID_REMOTE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;{POSITION:<sp/>\&quot;FOOBAR\&quot;}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/sources/server/sserver.cpp"/>
  </compounddef>
</doxygen>
