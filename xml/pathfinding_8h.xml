<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="pathfinding_8h" kind="file">
    <compoundname>pathfinding.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <includes local="no">utility</includes>
    <includes local="no">algorithm</includes>
    <includes refid="cellule_8h" local="yes">cellule.h</includes>
    <includes refid="definition_8h" local="yes">../definition.h</includes>
    <includes refid="manager_8h" local="yes">../manager.h</includes>
    <includedby refid="core_8h" local="yes">headers/core.h</includedby>
    <includedby refid="unitest_8cpp" local="yes">unitest.cpp</includedby>
    <incdepgraph>
      <node id="228">
        <label>manager/bloc.h</label>
        <link refid="bloc_8h"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>stdlib.h</label>
      </node>
      <node id="229">
        <label>../abstract/multipleobject.h</label>
        <link refid="multipleobject_8h"/>
        <childnode refid="225" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>string</label>
      </node>
      <node id="221">
        <label>cellule.h</label>
        <link refid="cellule_8h"/>
        <childnode refid="219" relation="include">
        </childnode>
      </node>
      <node id="224">
        <label>manager/car.h</label>
        <link refid="car_8h"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
      </node>
      <node id="218">
        <label>vector</label>
      </node>
      <node id="219">
        <label>utility</label>
      </node>
      <node id="227">
        <label>sstream</label>
      </node>
      <node id="223">
        <label>../manager.h</label>
        <link refid="manager_8h"/>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="217">
        <label>iostream</label>
      </node>
      <node id="231">
        <label>manager/arrive.h</label>
        <link refid="arrive_8h"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>manager/chemin.h</label>
        <link refid="chemin_8h"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
      </node>
      <node id="226">
        <label>../abstract/simpleobject.h</label>
        <link refid="simpleobject_8h"/>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>algorithm</label>
      </node>
      <node id="216">
        <label>headers/traitement/pathfinding.h</label>
        <link refid="pathfinding.h"/>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
      </node>
      <node id="222">
        <label>../definition.h</label>
        <link refid="definition_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="234">
        <label>headers/core.h</label>
        <link refid="core_8h"/>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
      </node>
      <node id="237">
        <label>unitest.cpp</label>
        <link refid="unitest_8cpp"/>
      </node>
      <node id="236">
        <label>sources/core.cpp</label>
        <link refid="core_8cpp"/>
      </node>
      <node id="235">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="233">
        <label>headers/traitement/pathfinding.h</label>
        <link refid="pathfinding.h"/>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classPathFinding" prot="public">PathFinding</innerclass>
    <briefdescription>
<para>Search the best way to go to Arrival. </para>    </briefdescription>
    <detaileddescription>
<para>Return true if the Arrival or Start surrounded Blocks.</para><para>Get <ref refid="classCellule" kindref="compound">Cellule</ref> from position X and position Y.</para><para>Find Path.</para><para>Destructor to the class Pathfinding.</para><para>return Way to go to Arrival</para><para>Check if there are a solution.</para><para><simplesect kind="version"><para>1.0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>matrice</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix do not exceed 127x127 (contains blocks) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width_scene</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of Matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height_scene</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of Matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>pair&lt;int8_t,int8_t&gt; position of start (x and y) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>pair&lt;int8_t,int8_t&gt; position of Arrival (x and y)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="version"><para>1.0</para></simplesect>
<simplesect kind="return"><para>bool true if there are a Way to go to Arrival</para></simplesect>
<simplesect kind="version"><para>1.0</para></simplesect>
<simplesect kind="return"><para>std::vector&lt;std::pair&lt;int8_t, int8_t&gt;&gt;* return vector to pair (position of way, first order Arrival)</para></simplesect>
<simplesect kind="version"><para>1.0</para><simplesectsep/><para>1.0</para></simplesect>
recusive function</para><para>+------------<mdash/>+------------<mdash/>+------------<mdash/>+ | 0 0 0 | 0 0 0 | 0 0 0 | | 0 0 0 | 0 0 0 | 0 0 0 | | 0 0 0 | A2 B1 C1 | 0 0 0 | +------------<mdash/>+------------<mdash/>+------------<mdash/>+ | 0 0 A1 | A B C | C2 0 0 | | 0 0 D1 | D E F | F1 0 0 | | 0 0 G2 | G H I | I2 0 0 | +------------<mdash/>+------------<mdash/>+------------<mdash/>+ | 0 0 0 | G1 H1 I1 | 0 0 0 | | 0 0 0 | 0 0 0 | 0 0 0 | | 0 0 0 | 0 0 0 | 0 0 0 | +------------<mdash/>+------------<mdash/>+------------<mdash/>+</para><para><simplesect kind="version"><para>1.0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Postion X into Matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Position Y into Matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Cellule* return the <ref refid="classCellule" kindref="compound">Cellule</ref> choosen</para></simplesect>
<simplesect kind="version"><para>1.0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Position X into Matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Position Y into Matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>matrice</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix contains all blocks </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if Arrival or Start is surrounded by block </para><simplesectsep/><para>false if not surrounded by block </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PATHFINDING_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>PATHFINDING_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cellule_8h" kindref="compound">cellule.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../definition.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../manager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classPathFinding" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classPathFinding" kindref="compound">PathFinding</ref>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classPathFinding_1aff5b197409e0489e6df3c2366ee6f8cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1aff5b197409e0489e6df3c2366ee6f8cd" kindref="member">PathFinding</ref>(int8_t<sp/>**matrice,<sp/>int8_t<sp/>width_scene,<sp/></highlight><highlight class="comment">/*matrice<sp/>0<sp/>to<sp/>127*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>height_scene,<sp/>std::pair&lt;int8_t,int8_t&gt;<sp/>start,<sp/>std::pair&lt;int8_t,int8_t&gt;<sp/>end){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1a33dac4c9b17f5e6032bc0fc60e7a8249" kindref="member">start_coord</ref><sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1a7db7c62b00778fb60be8fdb10c471851" kindref="member">end_coord</ref><sp/>=<sp/>end;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1a50f9513402ad1113678635c3eb9da62d" kindref="member">width</ref><sp/>=<sp/>width_scene;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1a61e5643d7459d24b07306a6886348ca1" kindref="member">height</ref><sp/>=<sp/>height_scene;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classPathFinding_1ad85b700719e73736e36d2548f950323a" kindref="member">surroundedBlocs</ref>(end.first,<sp/>end.second,<sp/>matrice)<sp/>||<sp/><ref refid="classPathFinding_1ad85b700719e73736e36d2548f950323a" kindref="member">surroundedBlocs</ref>(start.first,<sp/>start.second,<sp/>matrice)){</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int8_t<sp/>i_width<sp/>=<sp/>0;<sp/>i_width<sp/>&lt;<sp/>width_scene;<sp/>++i_width){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int8_t<sp/>i_height=<sp/>0;<sp/>i_height<sp/>&lt;<sp/>height_scene;<sp/>++i_height){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isbloc<sp/>=<sp/>(matrice[i_width][i_height]<sp/>==<sp/><ref refid="definition_8h_1a4d275339ef3ddec11c63b8b925b5b358" kindref="member">BLOC_DEF</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1ae2eff9f0d9ffba2d88d405d10c34660a" kindref="member">all_cellules</ref>.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>(i_width,<sp/>i_height,<sp/>isbloc));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref><sp/>*firstCell<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(start.first,<sp/>start.second);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstCell-&gt;<ref refid="classCellule_1af7cb9856701ea3e423f58b09bb7dfdbd" kindref="member">m_P</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstCell-&gt;<ref refid="classCellule_1a9c368e6fb89c5ea1e31b810207eca9ee" kindref="member">everfind</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>.push_back(firstCell);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1addc7b9eb5682e0de46fd59c4a1319a86" kindref="member">findPath</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1a1c1b4bc29b0f8a74f80d2601c83844aa" kindref="member">list_cheminOk</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;std::pair&lt;int8_t,<sp/>int8_t&gt;&gt;();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1a1c1b4bc29b0f8a74f80d2601c83844aa" kindref="member">list_cheminOk</ref>-&gt;reserve(width_scene*(width_scene/2));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classPathFinding_1a2cb53ee646709c2367a6819d758ec7c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classPathFinding_1a2cb53ee646709c2367a6819d758ec7c3" kindref="member">everParent</ref>(<ref refid="classCellule" kindref="compound">Cellule</ref><sp/>*current,<sp/><ref refid="classCellule" kindref="compound">Cellule</ref><sp/>*parent){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref><sp/>*_current<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(current-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(_current<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_current<sp/>==<sp/>parent){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_current<sp/>=<sp/>_current-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73" refid="classPathFinding_1a8d70d17f06400cdcd5787331d7be38e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classPathFinding_1a8d70d17f06400cdcd5787331d7be38e2" kindref="member">hasPossibility</ref>(){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classPathFinding_1aff1ca43a0ea5e4b9e5e188f165f08cd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;int8_t,<sp/>int8_t&gt;&gt;*<sp/><ref refid="classPathFinding_1aff1ca43a0ea5e4b9e5e188f165f08cd2" kindref="member">getChemin</ref>(){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1a1c1b4bc29b0f8a74f80d2601c83844aa" kindref="member">list_cheminOk</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref><sp/>*current<sp/>=<sp/><ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(current<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(current-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>()<sp/>!=<sp/><ref refid="classPathFinding_1a33dac4c9b17f5e6032bc0fc60e7a8249" kindref="member">start_coord</ref>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1a1c1b4bc29b0f8a74f80d2601c83844aa" kindref="member">list_cheminOk</ref>-&gt;push_back(current-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(current-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!current-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref>-&gt;<ref refid="classCellule_1a9c368e6fb89c5ea1e31b810207eca9ee" kindref="member">everfind</ref>){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="classCellule_1a9c368e6fb89c5ea1e31b810207eca9ee" kindref="member">everfind</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(current<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1a1c1b4bc29b0f8a74f80d2601c83844aa" kindref="member">list_cheminOk</ref>-&gt;push_back(current-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//list_cheminOk-&gt;pop_back();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classPathFinding_1a1c1b4bc29b0f8a74f80d2601c83844aa" kindref="member">list_cheminOk</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classPathFinding_1a0fc7389a32fa31a194a940a89f252bdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1a0fc7389a32fa31a194a940a89f252bdb" kindref="member">~PathFinding</ref>(){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<ref refid="classPathFinding_1a1c1b4bc29b0f8a74f80d2601c83844aa" kindref="member">list_cheminOk</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1a1c1b4bc29b0f8a74f80d2601c83844aa" kindref="member">list_cheminOk</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i=0;<sp/>i&lt;<ref refid="classPathFinding_1ae2eff9f0d9ffba2d88d405d10c34660a" kindref="member">all_cellules</ref>.size();<sp/>++i){</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classPathFinding_1ae2eff9f0d9ffba2d88d405d10c34660a" kindref="member">all_cellules</ref>[i];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1ae2eff9f0d9ffba2d88d405d10c34660a" kindref="member">all_cellules</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i=0;<sp/>i&lt;<ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>.size();<sp/>++i){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>[i];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="127" refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref><sp/>*<ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref>;</highlight></codeline>
<codeline lineno="128" refid="classPathFinding_1a1c1b4bc29b0f8a74f80d2601c83844aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;int8_t,int8_t&gt;&gt;<sp/>*<ref refid="classPathFinding_1a1c1b4bc29b0f8a74f80d2601c83844aa" kindref="member">list_cheminOk</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classPathFinding_1addc7b9eb5682e0de46fd59c4a1319a86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPathFinding_1addc7b9eb5682e0de46fd59c4a1319a86" kindref="member">findPath</ref>(){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Cellule*&gt;<sp/>actuel_list<sp/>=<sp/><ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>.clear();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>index=0;<sp/>index&lt;(uint8_t)actuel_list.size();<sp/>++index){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>_currentCell<sp/>=<sp/>actuel_list.at(index);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>newP<sp/>=<sp/>_currentCell-&gt;<ref refid="classCellule_1af7cb9856701ea3e423f58b09bb7dfdbd" kindref="member">m_P</ref>+10;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>down<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>+<sp/>1,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>up<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>-<sp/>1,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>right<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>left<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>a1<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>-<sp/>1,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>d1<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>g2<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>+<sp/>1,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>g1<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>+<sp/>2,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>-1);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>h1<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>+<sp/>2,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>i1<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>+<sp/>2,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>i2<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>+<sp/>1,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>f1<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>c2<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>-<sp/>1,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>c1<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>-<sp/>2,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>+1);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>b1<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>-<sp/>2,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/>a2<sp/>=<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>-<sp/>2,<sp/>_currentCell-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>-1);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(g1<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>h1<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>i1<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>down-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref><sp/>!=<sp/>_currentCell){</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!g1-&gt;isBloc()<sp/>&amp;&amp;<sp/>!h1-&gt;isBloc()<sp/>&amp;&amp;<sp/>!i1-&gt;isBloc()){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newP<sp/>&lt;<sp/>down-&gt;m_P<sp/>&amp;&amp;<sp/>!<ref refid="classPathFinding_1a2cb53ee646709c2367a6819d758ec7c3" kindref="member">everParent</ref>(_currentCell-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref>,<sp/>down)){</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref><sp/>=<sp/>_currentCell;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down-&gt;<ref refid="classCellule_1af7cb9856701ea3e423f58b09bb7dfdbd" kindref="member">m_P</ref><sp/>=<sp/>newP;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>.push_back(down);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(down-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().first<sp/>==<sp/><ref refid="classPathFinding_1a7db7c62b00778fb60be8fdb10c471851" kindref="member">end_coord</ref>.first<sp/>&amp;&amp;<sp/>down-&gt;<ref refid="classCellule_1a50698c84ba5a043a148a594552189427" kindref="member">getCoord</ref>().second<sp/>==<sp/><ref refid="classPathFinding_1a7db7c62b00778fb60be8fdb10c471851" kindref="member">end_coord</ref>.second){</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref><sp/>=<sp/>_currentCell;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a2<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>b1<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c1<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>up-&gt;m_parent<sp/>!=<sp/>_currentCell){</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!a2-&gt;isBloc()<sp/>&amp;&amp;<sp/>!b1-&gt;isBloc()<sp/>&amp;&amp;<sp/>!c1-&gt;isBloc()){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newP<sp/>&lt;<sp/>up-&gt;m_P<sp/>&amp;&amp;<sp/>!<ref refid="classPathFinding_1a2cb53ee646709c2367a6819d758ec7c3" kindref="member">everParent</ref>(_currentCell,<sp/>up)){</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref><sp/>=<sp/>_currentCell;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up-&gt;<ref refid="classCellule_1af7cb9856701ea3e423f58b09bb7dfdbd" kindref="member">m_P</ref><sp/>=<sp/>newP;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>.push_back(up);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(up-&gt;getCoord().first<sp/>==<sp/><ref refid="classPathFinding_1a7db7c62b00778fb60be8fdb10c471851" kindref="member">end_coord</ref>.first<sp/>&amp;&amp;<sp/>up-&gt;getCoord().second<sp/>==<sp/><ref refid="classPathFinding_1a7db7c62b00778fb60be8fdb10c471851" kindref="member">end_coord</ref>.second){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref><sp/>=<sp/>_currentCell;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a1<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>d1<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>g2<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>left-&gt;m_parent<sp/>!=<sp/>_currentCell){</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!a1-&gt;isBloc()<sp/>&amp;&amp;<sp/>!d1-&gt;isBloc()<sp/>&amp;&amp;<sp/>!g2-&gt;isBloc()){</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newP<sp/>&lt;<sp/>left-&gt;m_P<sp/>&amp;&amp;<sp/>!<ref refid="classPathFinding_1a2cb53ee646709c2367a6819d758ec7c3" kindref="member">everParent</ref>(_currentCell-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref>,<sp/>left)){</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref><sp/>=<sp/>_currentCell;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left-&gt;<ref refid="classCellule_1af7cb9856701ea3e423f58b09bb7dfdbd" kindref="member">m_P</ref><sp/>=<sp/>newP;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>.push_back(left);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(left-&gt;getCoord().first<sp/>==<sp/><ref refid="classPathFinding_1a7db7c62b00778fb60be8fdb10c471851" kindref="member">end_coord</ref>.first<sp/>&amp;&amp;<sp/>left-&gt;getCoord().second<sp/>==<sp/><ref refid="classPathFinding_1a7db7c62b00778fb60be8fdb10c471851" kindref="member">end_coord</ref>.second){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref><sp/>=<sp/>_currentCell;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c2<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>f1<sp/>!=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>i2<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>right-&gt;m_parent<sp/>!=<sp/>_currentCell){</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!c2-&gt;isBloc()<sp/>&amp;&amp;<sp/>!f1-&gt;isBloc()<sp/>&amp;&amp;<sp/>!i2-&gt;isBloc()){</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newP<sp/>&lt;<sp/>right-&gt;m_P<sp/>&amp;&amp;<sp/>!<ref refid="classPathFinding_1a2cb53ee646709c2367a6819d758ec7c3" kindref="member">everParent</ref>(_currentCell-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref>,<sp/>right)){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right-&gt;<ref refid="classCellule_1a3f4117017976fde614e72d38ea10d734" kindref="member">m_parent</ref><sp/>=<sp/>_currentCell;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right-&gt;<ref refid="classCellule_1af7cb9856701ea3e423f58b09bb7dfdbd" kindref="member">m_P</ref><sp/>=<sp/>newP;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>.push_back(right);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(right-&gt;getCoord().first<sp/>==<sp/><ref refid="classPathFinding_1a7db7c62b00778fb60be8fdb10c471851" kindref="member">end_coord</ref>.first<sp/>&amp;&amp;<sp/>right-&gt;getCoord().second<sp/>==<sp/><ref refid="classPathFinding_1a7db7c62b00778fb60be8fdb10c471851" kindref="member">end_coord</ref>.second){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref><sp/>=<sp/>_currentCell;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classPathFinding_1ada148538e4a78dcc97f24ae74156abd4" kindref="member">_pathfinding</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPathFinding_1addc7b9eb5682e0de46fd59c4a1319a86" kindref="member">findPath</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCellule" kindref="compound">Cellule</ref>*<sp/><ref refid="classPathFinding_1a3817cc8f9d1604bf34a5a3b4f878b3da" kindref="member">getCellule</ref>(int8_t<sp/>x,<sp/>int8_t<sp/>y){</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&lt;<sp/>0<sp/>||<sp/>y<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&gt;=<sp/><ref refid="classPathFinding_1a50f9513402ad1113678635c3eb9da62d" kindref="member">width</ref><sp/>||<sp/>y<sp/>&gt;=<sp/><ref refid="classPathFinding_1a61e5643d7459d24b07306a6886348ca1" kindref="member">height</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>index<sp/>=<sp/>(<ref refid="classPathFinding_1a61e5643d7459d24b07306a6886348ca1" kindref="member">height</ref>*x)<sp/>+<sp/>y;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classPathFinding_1ae2eff9f0d9ffba2d88d405d10c34660a" kindref="member">all_cellules</ref>.size()<sp/>&gt;<sp/>index)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classPathFinding_1ae2eff9f0d9ffba2d88d405d10c34660a" kindref="member">all_cellules</ref>.at(index);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classPathFinding_1ad85b700719e73736e36d2548f950323a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classPathFinding_1ad85b700719e73736e36d2548f950323a" kindref="member">surroundedBlocs</ref>(int8_t<sp/>x,<sp/>int8_t<sp/>y,<sp/>int8_t**<sp/>matrice){</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matrice[x+1][y]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matrice[x][y+1]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>&lt;<sp/>x<sp/>&amp;&amp;<sp/>x&lt;<ref refid="classPathFinding_1a50f9513402ad1113678635c3eb9da62d" kindref="member">width</ref>-1){</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matrice[x+1][y]<sp/>==<sp/>0<sp/>||<sp/>matrice[x-1][y]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>&lt;<sp/>y<sp/>&amp;&amp;<sp/>y&lt;<ref refid="classPathFinding_1a61e5643d7459d24b07306a6886348ca1" kindref="member">height</ref>-1){</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matrice[x][y+1]<sp/>==<sp/>0<sp/>||<sp/>matrice[x][y-1]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="classPathFinding_1a50f9513402ad1113678635c3eb9da62d" kindref="member">width</ref>-1){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matrice[x-1][y]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y<sp/>==<sp/><ref refid="classPathFinding_1a61e5643d7459d24b07306a6886348ca1" kindref="member">height</ref>-1){</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matrice[x][y-1]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="classPathFinding_1ae2eff9f0d9ffba2d88d405d10c34660a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Cellule*&gt;<sp/><ref refid="classPathFinding_1ae2eff9f0d9ffba2d88d405d10c34660a" kindref="member">all_cellules</ref>;</highlight></codeline>
<codeline lineno="297" refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Cellule*&gt;<sp/><ref refid="classPathFinding_1aac0f1388f79b45388470d634c909174e" kindref="member">current_list</ref>;</highlight></codeline>
<codeline lineno="298" refid="classPathFinding_1a50f9513402ad1113678635c3eb9da62d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="classPathFinding_1a50f9513402ad1113678635c3eb9da62d" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="299" refid="classPathFinding_1a61e5643d7459d24b07306a6886348ca1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="classPathFinding_1a61e5643d7459d24b07306a6886348ca1" kindref="member">height</ref>;</highlight></codeline>
<codeline lineno="300" refid="classPathFinding_1a33dac4c9b17f5e6032bc0fc60e7a8249" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int8_t,<sp/>int8_t&gt;<sp/><ref refid="classPathFinding_1a33dac4c9b17f5e6032bc0fc60e7a8249" kindref="member">start_coord</ref>;</highlight></codeline>
<codeline lineno="301" refid="classPathFinding_1a7db7c62b00778fb60be8fdb10c471851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int8_t,<sp/>int8_t&gt;<sp/><ref refid="classPathFinding_1a7db7c62b00778fb60be8fdb10c471851" kindref="member">end_coord</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">};</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/traitement/pathfinding.h"/>
  </compounddef>
</doxygen>
