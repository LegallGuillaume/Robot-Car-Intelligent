<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classCore" kind="class" prot="public">
    <compoundname>Core</compoundname>
    <includes refid="core_8h" local="no">core.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCore_1a2eaa56d6855905faec8a1764db40892b" prot="private" static="no" mutable="no">
        <type>struct <ref refid="struct__stateMachine" kindref="compound">_stateMachine</ref></type>
        <definition>struct _stateMachine Core::stateMachine</definition>
        <argsstring></argsstring>
        <name>stateMachine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="28" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="32" bodyend="-1"/>
        <referencedby refid="classCore_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="117" endline="163">autoVirtualMode</referencedby>
        <referencedby refid="classCore_1a8648fac82f0324cead88c8fa2731b286" compoundref="core_8cpp" startline="193" endline="212">blockProcessing</referencedby>
        <referencedby refid="classCore_1a2d832a5e544b5e76d03a7fd596522b42" compoundref="core_8cpp" startline="181" endline="191">calibration</referencedby>
        <referencedby refid="classCore_1a2ad48b714f575d3f3c25c80ffa72afad" compoundref="core_8cpp" startline="91" endline="102">init</referencedby>
        <referencedby refid="classCore_1a333060e38c961d6fbf4ba4d01a84e48b" compoundref="core_8cpp" startline="214" endline="230">pathfinding</referencedby>
        <referencedby refid="classCore_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="108" endline="115">setMode</referencedby>
        <referencedby refid="classCore_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="89">start</referencedby>
        <referencedby refid="classCore_1a185801ec33fe24b0f36e4d9e474403ca" compoundref="core_8cpp" startline="241" endline="247">trajectory</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCore_1a92f7a9f089b3dca665ec0537fb554d1b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Core::changeMode</definition>
        <argsstring></argsstring>
        <name>changeMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="33" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="33" bodyend="-1"/>
        <referencedby refid="classCore_1a2ad48b714f575d3f3c25c80ffa72afad" compoundref="core_8cpp" startline="91" endline="102">init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCore_1a05fa4660e945441b917880d1e148c89a" prot="private" static="no" mutable="no">
        <type><ref refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911" kindref="member">Mode</ref></type>
        <definition>Mode Core::avm_mode</definition>
        <argsstring></argsstring>
        <name>avm_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="34" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="34" bodyend="-1"/>
        <referencedby refid="classCore_1a0d0ccf9b40761ed8f88fe1d9a348fc02" compoundref="core_8cpp" startline="104" endline="106">getCurrentMode</referencedby>
        <referencedby refid="classCore_1a9677503611528b6d6f2039eff6f80912" compoundref="core_8cpp" startline="170" endline="174">listenIPC</referencedby>
        <referencedby refid="classCore_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="108" endline="115">setMode</referencedby>
        <referencedby refid="classCore_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="89">start</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCore_1a834f8de7a2b8f18b19af83d6c05b9b3a" prot="private" static="no" mutable="no">
        <type><ref refid="classManager" kindref="compound">Manager</ref> *</type>
        <definition>Manager* Core::manager</definition>
        <argsstring></argsstring>
        <name>manager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="36" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="36" bodyend="-1"/>
        <referencedby refid="classCore_1a8648fac82f0324cead88c8fa2731b286" compoundref="core_8cpp" startline="193" endline="212">blockProcessing</referencedby>
        <referencedby refid="classCore_1ae03caf8d8abe9d4c3b875c6f6a5d40dd" compoundref="core_8cpp" startline="18" endline="61">drawDebug</referencedby>
        <referencedby refid="classCore_1a2ad48b714f575d3f3c25c80ffa72afad" compoundref="core_8cpp" startline="91" endline="102">init</referencedby>
        <referencedby refid="classCore_1a333060e38c961d6fbf4ba4d01a84e48b" compoundref="core_8cpp" startline="214" endline="230">pathfinding</referencedby>
        <referencedby refid="classCore_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="108" endline="115">setMode</referencedby>
        <referencedby refid="classCore_1a776f8c46504b14183883c6273f93eaed" compoundref="core_8cpp" startline="9" endline="16">~Core</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCore_1a7a18e37fde7d3ca4b1568225b51eaf0d" prot="private" static="no" mutable="no">
        <type><ref refid="classImagesP" kindref="compound">ImagesP</ref> *</type>
        <definition>ImagesP* Core::process</definition>
        <argsstring></argsstring>
        <name>process</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="37" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="37" bodyend="-1"/>
        <referencedby refid="classCore_1a8648fac82f0324cead88c8fa2731b286" compoundref="core_8cpp" startline="193" endline="212">blockProcessing</referencedby>
        <referencedby refid="classCore_1a2d832a5e544b5e76d03a7fd596522b42" compoundref="core_8cpp" startline="181" endline="191">calibration</referencedby>
        <referencedby refid="classCore_1a776f8c46504b14183883c6273f93eaed" compoundref="core_8cpp" startline="9" endline="16">~Core</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCore_1a55b925c8acc13a0002112d48a054984e" prot="private" static="no" mutable="no">
        <type><ref refid="classPathFinding" kindref="compound">PathFinding</ref> *</type>
        <definition>PathFinding* Core::path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="38" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="38" bodyend="-1"/>
        <referencedby refid="classCore_1a333060e38c961d6fbf4ba4d01a84e48b" compoundref="core_8cpp" startline="214" endline="230">pathfinding</referencedby>
        <referencedby refid="classCore_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="108" endline="115">setMode</referencedby>
        <referencedby refid="classCore_1a776f8c46504b14183883c6273f93eaed" compoundref="core_8cpp" startline="9" endline="16">~Core</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCore_1a14e63188e0aa7c4a6f72d5501384d1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Core::Core</definition>
        <argsstring>()</argsstring>
        <name>Core</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="24" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="5" bodyend="7"/>
        <references refid="classCore_1a2ad48b714f575d3f3c25c80ffa72afad" compoundref="core_8cpp" startline="91" endline="102">init</references>
      </memberdef>
      <memberdef kind="function" id="classCore_1a776f8c46504b14183883c6273f93eaed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Core::~Core</definition>
        <argsstring>()</argsstring>
        <name>~Core</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="25" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="9" bodyend="16"/>
        <references refid="classCore_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="36">manager</references>
        <references refid="classCore_1a55b925c8acc13a0002112d48a054984e" compoundref="core_8h" startline="38">path</references>
        <references refid="classCore_1a7a18e37fde7d3ca4b1568225b51eaf0d" compoundref="core_8h" startline="37">process</references>
      </memberdef>
      <memberdef kind="function" id="classCore_1a722434c9873d07d6b26a74e40e08eb9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="26" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="63" bodyend="89"/>
        <references refid="struct__stateMachine_1a79ce614ae01c3759d155c03026384ca7" compoundref="core_8h" startline="16">_stateMachine::_statePathfinding</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911a62a2c1fd120cdb7005bf42408c887d9d">Auto_Mode</references>
        <references refid="classCore_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="117" endline="163">autoVirtualMode</references>
        <references refid="classCore_1a05fa4660e945441b917880d1e148c89a" compoundref="core_8h" startline="34">avm_mode</references>
        <references refid="definition_8h_1a117352cc494cc62c6b2f1882786a332c" compoundref="definition_8h" startline="5">DEBUG</references>
        <references refid="classCore_1ae03caf8d8abe9d4c3b875c6f6a5d40dd" compoundref="core_8cpp" startline="18" endline="61">drawDebug</references>
        <references refid="classCore_1a2ad48b714f575d3f3c25c80ffa72afad" compoundref="core_8cpp" startline="91" endline="102">init</references>
        <references refid="classCore_1a9677503611528b6d6f2039eff6f80912" compoundref="core_8cpp" startline="170" endline="174">listenIPC</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911a493c3024fdbbce51ec6d8d8b0feacf13">Manual_Mode</references>
        <references refid="classCore_1afcdd1611a6528fd3d597d719405493b4" compoundref="core_8cpp" startline="165" endline="167">manualMode</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <references refid="classCore_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="32">stateMachine</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911acf535b39ede8798cd6b56d99271afeef">Stop_Mode</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911a6879e8dabec58a1e3e670eaddfdc7bf7">Virtual_Mode</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="5" endline="9">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1a01ec355d4fc9be14623bb7b249ad9562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCore_1a85d7a4a5672973830aa10185b121ded9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="28" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCore_1ae03caf8d8abe9d4c3b875c6f6a5d40dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Core::drawDebug</definition>
        <argsstring>(Mat &amp;frame)</argsstring>
        <name>drawDebug</name>
        <param>
          <type>Mat &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="40" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="18" bodyend="61"/>
        <references refid="classManager_1a6f99d8e25fc61a7fe0fdf160610b31cf" compoundref="manager_8h" startline="40">Manager::arrive</references>
        <references refid="classManager_1a66599bf2bd10c95b9fb7be9c333e0ff9" compoundref="manager_8h" startline="38">Manager::bloc</references>
        <references refid="classManager_1a2803dff8e8f2912242f4098991d91415" compoundref="manager_8h" startline="37">Manager::car</references>
        <references refid="classManager_1abaeefec28074459f6dbdc64af9c6a3b9" compoundref="manager_8h" startline="39">Manager::chemin</references>
        <references refid="classCar_1a20dd521474ee36b144bde58e3359eed6" compoundref="car_8h" startline="25" endline="27">Car::getPosition</references>
        <references refid="classArrive_1abe91e4a5bcf15ff987ab58c05b6bb537" compoundref="arrive_8h" startline="34" endline="36">Arrive::getPosition</references>
        <references refid="classBloc_1a51ad89062b91675830e0285f992f3210" compoundref="bloc_8h" startline="31">Bloc::list_bloc</references>
        <references refid="classChemin_1a5acfc655d74effb1ed6eb14494c017b0" compoundref="chemin_8h" startline="21">Chemin::list_chemin</references>
        <references refid="classCore_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="36">manager</references>
        <referencedby refid="classCore_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="89">start</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1a2ad48b714f575d3f3c25c80ffa72afad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="41" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="91" bodyend="102"/>
        <references refid="struct__stateMachine_1a157036ced733a021849ebcbc98c27200" compoundref="core_8h" startline="14">_stateMachine::_stateCalibration</references>
        <references refid="struct__stateMachine_1adbc0e51d4bed9b6da5c44e921e37dc32" compoundref="core_8h" startline="15">_stateMachine::_stateImageBlock</references>
        <references refid="struct__stateMachine_1aa6cc70d0567b403fb9e993a681f48b85" compoundref="core_8h" startline="13">_stateMachine::_stateIPC</references>
        <references refid="struct__stateMachine_1a79ce614ae01c3759d155c03026384ca7" compoundref="core_8h" startline="16">_stateMachine::_statePathfinding</references>
        <references refid="struct__stateMachine_1aaee24e4ab99a6f1243a46645188de8d0" compoundref="core_8h" startline="12">_stateMachine::_stateServer</references>
        <references refid="struct__stateMachine_1a88c6e0c15cdd29b3eec2e842fa09b08f" compoundref="core_8h" startline="17">_stateMachine::_stateTrajectory</references>
        <references refid="classCore_1a92f7a9f089b3dca665ec0537fb554d1b" compoundref="core_8h" startline="33">changeMode</references>
        <references refid="classManager_1a5d783bd86e9be93235898a46de80847f" compoundref="manager_8cpp" startline="8" endline="13">Manager::getInstance</references>
        <references refid="classManager_1a24a0a31be841d8707708874486cb1b7c" compoundref="manager_8h" startline="95" endline="113">Manager::initScene</references>
        <references refid="classCore_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="36">manager</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ab50339a10e1de285ac99d4c3990b8693">NONE</references>
        <references refid="classCore_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="108" endline="115">setMode</references>
        <references refid="classCore_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="32">stateMachine</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911acf535b39ede8798cd6b56d99271afeef">Stop_Mode</references>
        <referencedby refid="classCore_1a14e63188e0aa7c4a6f72d5501384d1f9" compoundref="core_8cpp" startline="5" endline="7">Core</referencedby>
        <referencedby refid="classCore_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="89">start</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1a2197457d525b6f0eface1f8712fd2084" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::restartServer</definition>
        <argsstring>()</argsstring>
        <name>restartServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCore_1a1dac5f63296f11309c2f25770b30912b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Core::setMode</definition>
        <argsstring>(Mode _mode)</argsstring>
        <name>setMode</name>
        <param>
          <type><ref refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911" kindref="member">Mode</ref></type>
          <declname>_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="43" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="108" bodyend="115"/>
        <references refid="struct__stateMachine_1adbc0e51d4bed9b6da5c44e921e37dc32" compoundref="core_8h" startline="15">_stateMachine::_stateImageBlock</references>
        <references refid="struct__stateMachine_1a79ce614ae01c3759d155c03026384ca7" compoundref="core_8h" startline="16">_stateMachine::_statePathfinding</references>
        <references refid="struct__stateMachine_1a88c6e0c15cdd29b3eec2e842fa09b08f" compoundref="core_8h" startline="17">_stateMachine::_stateTrajectory</references>
        <references refid="classCore_1a05fa4660e945441b917880d1e148c89a" compoundref="core_8h" startline="34">avm_mode</references>
        <references refid="classCore_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="36">manager</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ab50339a10e1de285ac99d4c3990b8693">NONE</references>
        <references refid="classCore_1a55b925c8acc13a0002112d48a054984e" compoundref="core_8h" startline="38">path</references>
        <references refid="classManager_1a8cb433965677ad622ee43d59e24262e7" compoundref="manager_8cpp" startline="73" endline="79">Manager::reset</references>
        <references refid="classCore_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="32">stateMachine</references>
        <referencedby refid="classCore_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="117" endline="163">autoVirtualMode</referencedby>
        <referencedby refid="classCore_1a2ad48b714f575d3f3c25c80ffa72afad" compoundref="core_8cpp" startline="91" endline="102">init</referencedby>
        <referencedby refid="classCore_1a9677503611528b6d6f2039eff6f80912" compoundref="core_8cpp" startline="170" endline="174">listenIPC</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1a0d0ccf9b40761ed8f88fe1d9a348fc02" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911" kindref="member">Mode</ref></type>
        <definition>Mode Core::getCurrentMode</definition>
        <argsstring>()</argsstring>
        <name>getCurrentMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="44" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="104" bodyend="106"/>
        <references refid="classCore_1a05fa4660e945441b917880d1e148c89a" compoundref="core_8h" startline="34">avm_mode</references>
      </memberdef>
      <memberdef kind="function" id="classCore_1a9677503611528b6d6f2039eff6f80912" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Core::listenIPC</definition>
        <argsstring>()</argsstring>
        <name>listenIPC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="46" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="170" bodyend="174"/>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911a62a2c1fd120cdb7005bf42408c887d9d">Auto_Mode</references>
        <references refid="classCore_1a05fa4660e945441b917880d1e148c89a" compoundref="core_8h" startline="34">avm_mode</references>
        <references refid="classCore_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="108" endline="115">setMode</references>
        <referencedby refid="classCore_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="89">start</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1a7fab8414125602f9f595143bb21d24c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Core::autoVirtualMode</definition>
        <argsstring>(bool is_auto)</argsstring>
        <name>autoVirtualMode</name>
        <param>
          <type>bool</type>
          <declname>is_auto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="48" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="117" bodyend="163"/>
        <references refid="struct__stateMachine_1a157036ced733a021849ebcbc98c27200" compoundref="core_8h" startline="14">_stateMachine::_stateCalibration</references>
        <references refid="struct__stateMachine_1adbc0e51d4bed9b6da5c44e921e37dc32" compoundref="core_8h" startline="15">_stateMachine::_stateImageBlock</references>
        <references refid="struct__stateMachine_1a79ce614ae01c3759d155c03026384ca7" compoundref="core_8h" startline="16">_stateMachine::_statePathfinding</references>
        <references refid="struct__stateMachine_1aaee24e4ab99a6f1243a46645188de8d0" compoundref="core_8h" startline="12">_stateMachine::_stateServer</references>
        <references refid="struct__stateMachine_1a88c6e0c15cdd29b3eec2e842fa09b08f" compoundref="core_8h" startline="17">_stateMachine::_stateTrajectory</references>
        <references refid="classCore_1a8648fac82f0324cead88c8fa2731b286" compoundref="core_8cpp" startline="193" endline="212">blockProcessing</references>
        <references refid="classCore_1a2d832a5e544b5e76d03a7fd596522b42" compoundref="core_8cpp" startline="181" endline="191">calibration</references>
        <references refid="definition_8h_1a117352cc494cc62c6b2f1882786a332c" compoundref="definition_8h" startline="5">DEBUG</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ac2f3f489a00553e7a01d369c103c7251">NO</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ab50339a10e1de285ac99d4c3990b8693">NONE</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <references refid="classCore_1a333060e38c961d6fbf4ba4d01a84e48b" compoundref="core_8cpp" startline="214" endline="230">pathfinding</references>
        <references refid="classCore_1a2a8efb95fadd86481ba62c98b72c7f1c" compoundref="core_8cpp" startline="176" endline="179">server</references>
        <references refid="classCore_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="108" endline="115">setMode</references>
        <references refid="classCore_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="32">stateMachine</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911acf535b39ede8798cd6b56d99271afeef">Stop_Mode</references>
        <references refid="classCore_1a185801ec33fe24b0f36e4d9e474403ca" compoundref="core_8cpp" startline="241" endline="247">trajectory</references>
        <referencedby refid="classCore_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="89">start</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1afcdd1611a6528fd3d597d719405493b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Core::manualMode</definition>
        <argsstring>()</argsstring>
        <name>manualMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="49" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="165" bodyend="167"/>
        <referencedby refid="classCore_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="89">start</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1a2d832a5e544b5e76d03a7fd596522b42" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref></type>
        <definition>State Core::calibration</definition>
        <argsstring>()</argsstring>
        <name>calibration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="52" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="181" bodyend="191"/>
        <references refid="struct__stateMachine_1a157036ced733a021849ebcbc98c27200" compoundref="core_8h" startline="14">_stateMachine::_stateCalibration</references>
        <references refid="classImagesP_1a799c4550d96659d7d188b03f52bb9f4a" compoundref="images_8cpp" startline="193" endline="218">ImagesP::calibration</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</references>
        <references refid="classImagesP_1a4048e5f515cb51cbf25211ec8b4854b7" compoundref="images_8cpp" startline="172" endline="191">ImagesP::loadCalib</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <references refid="classCore_1a7a18e37fde7d3ca4b1568225b51eaf0d" compoundref="core_8h" startline="37">process</references>
        <references refid="classCore_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="32">stateMachine</references>
        <referencedby refid="classCore_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="117" endline="163">autoVirtualMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1a8648fac82f0324cead88c8fa2731b286" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref></type>
        <definition>State Core::blockProcessing</definition>
        <argsstring>(bool is_auto)</argsstring>
        <name>blockProcessing</name>
        <param>
          <type>bool</type>
          <declname>is_auto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="53" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="193" bodyend="212"/>
        <references refid="struct__stateMachine_1adbc0e51d4bed9b6da5c44e921e37dc32" compoundref="core_8h" startline="15">_stateMachine::_stateImageBlock</references>
        <references refid="classBloc_1a02db4c95699ce40e8ad671ef759ebdb7" compoundref="bloc_8cpp" startline="16" endline="19">Bloc::add</references>
        <references refid="classImagesP_1ab9e279526694a7ce421cfa11b9309ed1" compoundref="images_8h" startline="24">ImagesP::all_block</references>
        <references refid="classManager_1a6f99d8e25fc61a7fe0fdf160610b31cf" compoundref="manager_8h" startline="40">Manager::arrive</references>
        <references refid="classManager_1a66599bf2bd10c95b9fb7be9c333e0ff9" compoundref="manager_8h" startline="38">Manager::bloc</references>
        <references refid="classManager_1a2803dff8e8f2912242f4098991d91415" compoundref="manager_8h" startline="37">Manager::car</references>
        <references refid="definition_8h_1a117352cc494cc62c6b2f1882786a332c" compoundref="definition_8h" startline="5">DEBUG</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</references>
        <references refid="classImagesP_1aaf0d33634f747f1defec833fbc6dfae2" compoundref="images_8cpp" startline="235" endline="237">ImagesP::getArrivalPosition</references>
        <references refid="classImagesP_1afe9cff50f49fc67bd8938d8d0223fe81" compoundref="images_8cpp" startline="230" endline="232">ImagesP::getCarPosition</references>
        <references refid="classImagesP_1a002bb2f3148a85c46c954dcc98ad2760" compoundref="images_8cpp" startline="14" endline="16">ImagesP::getSizeMarker</references>
        <references refid="classCore_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="36">manager</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <references refid="classCore_1a7a18e37fde7d3ca4b1568225b51eaf0d" compoundref="core_8h" startline="37">process</references>
        <references refid="classCar_1a97e3c5de8eb65659ef520de6591f814d" compoundref="car_8h" startline="21" endline="24">Car::setPosition</references>
        <references refid="classArrive_1ab0484a9338e3774c5fa824153b1470e2" compoundref="arrive_8h" startline="29" endline="33">Arrive::setPosition</references>
        <references refid="classImagesP_1ae2aecf8db20e7b3bcd14a7182dfdaf29" compoundref="images_8cpp" startline="220" endline="228">ImagesP::startBlock</references>
        <references refid="classCore_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="32">stateMachine</references>
        <references refid="classManager_1af43da42550bd9746c5ea61a6aeee80de" compoundref="manager_8cpp" startline="15" endline="37">Manager::update</references>
        <referencedby refid="classCore_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="117" endline="163">autoVirtualMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1a333060e38c961d6fbf4ba4d01a84e48b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref></type>
        <definition>State Core::pathfinding</definition>
        <argsstring>()</argsstring>
        <name>pathfinding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="54" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="214" bodyend="230"/>
        <references refid="struct__stateMachine_1a79ce614ae01c3759d155c03026384ca7" compoundref="core_8h" startline="16">_stateMachine::_statePathfinding</references>
        <references refid="classChemin_1a2ee7b6a34082453fbdf890a49017aead" compoundref="chemin_8cpp" startline="16" endline="19">Chemin::add</references>
        <references refid="classManager_1a6f99d8e25fc61a7fe0fdf160610b31cf" compoundref="manager_8h" startline="40">Manager::arrive</references>
        <references refid="classManager_1a2803dff8e8f2912242f4098991d91415" compoundref="manager_8h" startline="37">Manager::car</references>
        <references refid="classManager_1abaeefec28074459f6dbdc64af9c6a3b9" compoundref="manager_8h" startline="39">Manager::chemin</references>
        <references refid="classPathFinding_1aff1ca43a0ea5e4b9e5e188f165f08cd2" compoundref="pathfinding_8h" startline="84" endline="103">PathFinding::getChemin</references>
        <references refid="classManager_1a963d327a438d93b100ff68b475d2cf83" compoundref="manager_8h" startline="72" endline="74">Manager::getGeneralTable</references>
        <references refid="classCar_1a20dd521474ee36b144bde58e3359eed6" compoundref="car_8h" startline="25" endline="27">Car::getPosition</references>
        <references refid="classArrive_1abe91e4a5bcf15ff987ab58c05b6bb537" compoundref="arrive_8h" startline="34" endline="36">Arrive::getPosition</references>
        <references refid="classManager_1a18e77e06ef097db9e010835e7930bd3f" compoundref="manager_8h" startline="83" endline="85">Manager::getSceneCarrer</references>
        <references refid="classPathFinding_1a8d70d17f06400cdcd5787331d7be38e2" compoundref="pathfinding_8h" startline="73" endline="75">PathFinding::hasPossibility</references>
        <references refid="classCore_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="36">manager</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ac2f3f489a00553e7a01d369c103c7251">NO</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <references refid="classCore_1a55b925c8acc13a0002112d48a054984e" compoundref="core_8h" startline="38">path</references>
        <references refid="classCore_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="32">stateMachine</references>
        <references refid="classManager_1af43da42550bd9746c5ea61a6aeee80de" compoundref="manager_8cpp" startline="15" endline="37">Manager::update</references>
        <referencedby refid="classCore_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="117" endline="163">autoVirtualMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1a2a8efb95fadd86481ba62c98b72c7f1c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref></type>
        <definition>State Core::server</definition>
        <argsstring>()</argsstring>
        <name>server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="55" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="176" bodyend="179"/>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <referencedby refid="classCore_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="117" endline="163">autoVirtualMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1a185801ec33fe24b0f36e4d9e474403ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref></type>
        <definition>State Core::trajectory</definition>
        <argsstring>()</argsstring>
        <name>trajectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="56" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="241" bodyend="247"/>
        <references refid="struct__stateMachine_1a88c6e0c15cdd29b3eec2e842fa09b08f" compoundref="core_8h" startline="17">_stateMachine::_stateTrajectory</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <references refid="classCore_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="32">stateMachine</references>
        <referencedby refid="classCore_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="117" endline="163">autoVirtualMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCore_1a180fe625431721a94959a694fe91ef3f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::forward</definition>
        <argsstring>(float angle)</argsstring>
        <name>forward</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="59" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classCore_1a0639e803afd1447272759b6b0fa22f60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::rotation</definition>
        <argsstring>(float angle)</argsstring>
        <name>rotation</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="60" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="237" bodyend="239"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="33">
        <label>Core</label>
        <link refid="classCore"/>
        <childnode refid="34" relation="usage">
          <edgelabel>-path</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>-process</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>-stateMachine</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>-manager</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>T</label>
      </node>
      <node id="44">
        <label>Manager</label>
        <link refid="classManager"/>
        <childnode refid="45" relation="usage">
          <edgelabel>+arrive</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>+bloc</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>-instance</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>+chemin</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>+car</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="38" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>Bloc</label>
        <link refid="classBloc"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>-instance</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>+list_bloc</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>_stateMachine</label>
        <link refid="struct__stateMachine"/>
      </node>
      <node id="50">
        <label>Chemin</label>
        <link refid="classChemin"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>-instance</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>+list_chemin</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>Arrive</label>
        <link refid="classArrive"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>-instance</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>ImagesP</label>
        <link refid="classImagesP"/>
        <childnode refid="41" relation="usage">
          <edgelabel>-Markers</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>+all_block</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>std::vector&lt; Marker &gt;</label>
        <childnode refid="37" relation="template-instance">
          <edgelabel>&lt; Marker &gt;</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>std::vector&lt; Cellule * &gt;</label>
        <childnode refid="36" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
        <childnode refid="37" relation="template-instance">
          <edgelabel>&lt; Cellule * &gt;</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>MultipleObject</label>
        <link refid="classMultipleObject"/>
      </node>
      <node id="51">
        <label>Car</label>
        <link refid="classCar"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>-instance</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>std::vector&lt; std::pair&lt; int8_t, int8_t &gt; &gt;</label>
        <childnode refid="37" relation="template-instance">
          <edgelabel>&lt; std::pair&lt; int8_t, int8_t &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>SimpleObject</label>
        <link refid="classSimpleObject"/>
      </node>
      <node id="49">
        <label>std::vector&lt; pair&lt; int8_t, int8_t &gt; &gt;</label>
        <childnode refid="37" relation="template-instance">
          <edgelabel>&lt; pair&lt; int8_t, int8_t &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>PathFinding</label>
        <link refid="classPathFinding"/>
        <childnode refid="35" relation="usage">
          <edgelabel>-current_list</edgelabel>
          <edgelabel>-all_cellules</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>-list_cheminOk</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>-_pathfinding</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>Cellule</label>
        <link refid="classCellule"/>
        <childnode refid="36" relation="usage">
          <edgelabel>+m_parent</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>std::vector&lt; Point &gt;</label>
        <childnode refid="37" relation="template-instance">
          <edgelabel>&lt; Point &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="22" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="22" bodyend="62"/>
    <listofallmembers>
      <member refid="classCore_1a7fab8414125602f9f595143bb21d24c1" prot="private" virt="non-virtual"><scope>Core</scope><name>autoVirtualMode</name></member>
      <member refid="classCore_1a05fa4660e945441b917880d1e148c89a" prot="private" virt="non-virtual"><scope>Core</scope><name>avm_mode</name></member>
      <member refid="classCore_1a8648fac82f0324cead88c8fa2731b286" prot="private" virt="non-virtual"><scope>Core</scope><name>blockProcessing</name></member>
      <member refid="classCore_1a2d832a5e544b5e76d03a7fd596522b42" prot="private" virt="non-virtual"><scope>Core</scope><name>calibration</name></member>
      <member refid="classCore_1a92f7a9f089b3dca665ec0537fb554d1b" prot="private" virt="non-virtual"><scope>Core</scope><name>changeMode</name></member>
      <member refid="classCore_1a14e63188e0aa7c4a6f72d5501384d1f9" prot="public" virt="non-virtual"><scope>Core</scope><name>Core</name></member>
      <member refid="classCore_1ae03caf8d8abe9d4c3b875c6f6a5d40dd" prot="private" virt="non-virtual"><scope>Core</scope><name>drawDebug</name></member>
      <member refid="classCore_1a180fe625431721a94959a694fe91ef3f" prot="private" virt="non-virtual"><scope>Core</scope><name>forward</name></member>
      <member refid="classCore_1a0d0ccf9b40761ed8f88fe1d9a348fc02" prot="private" virt="non-virtual"><scope>Core</scope><name>getCurrentMode</name></member>
      <member refid="classCore_1a2ad48b714f575d3f3c25c80ffa72afad" prot="private" virt="non-virtual"><scope>Core</scope><name>init</name></member>
      <member refid="classCore_1a9677503611528b6d6f2039eff6f80912" prot="private" virt="non-virtual"><scope>Core</scope><name>listenIPC</name></member>
      <member refid="classCore_1a834f8de7a2b8f18b19af83d6c05b9b3a" prot="private" virt="non-virtual"><scope>Core</scope><name>manager</name></member>
      <member refid="classCore_1afcdd1611a6528fd3d597d719405493b4" prot="private" virt="non-virtual"><scope>Core</scope><name>manualMode</name></member>
      <member refid="classCore_1a55b925c8acc13a0002112d48a054984e" prot="private" virt="non-virtual"><scope>Core</scope><name>path</name></member>
      <member refid="classCore_1a333060e38c961d6fbf4ba4d01a84e48b" prot="private" virt="non-virtual"><scope>Core</scope><name>pathfinding</name></member>
      <member refid="classCore_1a7a18e37fde7d3ca4b1568225b51eaf0d" prot="private" virt="non-virtual"><scope>Core</scope><name>process</name></member>
      <member refid="classCore_1a85d7a4a5672973830aa10185b121ded9" prot="public" virt="non-virtual"><scope>Core</scope><name>reset</name></member>
      <member refid="classCore_1a2197457d525b6f0eface1f8712fd2084" prot="private" virt="non-virtual"><scope>Core</scope><name>restartServer</name></member>
      <member refid="classCore_1a0639e803afd1447272759b6b0fa22f60" prot="private" virt="non-virtual"><scope>Core</scope><name>rotation</name></member>
      <member refid="classCore_1a2a8efb95fadd86481ba62c98b72c7f1c" prot="private" virt="non-virtual"><scope>Core</scope><name>server</name></member>
      <member refid="classCore_1a1dac5f63296f11309c2f25770b30912b" prot="private" virt="non-virtual"><scope>Core</scope><name>setMode</name></member>
      <member refid="classCore_1a722434c9873d07d6b26a74e40e08eb9c" prot="public" virt="non-virtual"><scope>Core</scope><name>start</name></member>
      <member refid="classCore_1a2eaa56d6855905faec8a1764db40892b" prot="private" virt="non-virtual"><scope>Core</scope><name>stateMachine</name></member>
      <member refid="classCore_1a01ec355d4fc9be14623bb7b249ad9562" prot="public" virt="non-virtual"><scope>Core</scope><name>stop</name></member>
      <member refid="classCore_1a185801ec33fe24b0f36e4d9e474403ca" prot="private" virt="non-virtual"><scope>Core</scope><name>trajectory</name></member>
      <member refid="classCore_1a776f8c46504b14183883c6273f93eaed" prot="public" virt="non-virtual"><scope>Core</scope><name>~Core</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
