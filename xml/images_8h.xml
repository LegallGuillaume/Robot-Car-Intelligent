<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="images_8h" kind="file">
    <compoundname>images.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">cmath</includes>
    <includes local="no">vector</includes>
    <includes local="no">aruco/aruco.h</includes>
    <includes local="no">aruco/cvdrawingutils.h</includes>
    <includes local="no">opencv2/highgui/highgui.hpp</includes>
    <includes local="yes">opencv2/imgproc/imgproc.hpp</includes>
    <includes refid="definition_8h" local="yes">../definition.h</includes>
    <includedby refid="core_8h" local="yes">headers/core.h</includedby>
    <includedby refid="images_8cpp" local="yes">sources/traitement/images.cpp</includedby>
    <incdepgraph>
      <node id="202">
        <label>headers/traitement/images.h</label>
        <link refid="images.h"/>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>aruco/cvdrawingutils.h</label>
      </node>
      <node id="204">
        <label>cmath</label>
      </node>
      <node id="206">
        <label>aruco/aruco.h</label>
      </node>
      <node id="209">
        <label>opencv2/imgproc/imgproc.hpp</label>
      </node>
      <node id="205">
        <label>vector</label>
      </node>
      <node id="208">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="203">
        <label>iostream</label>
      </node>
      <node id="210">
        <label>../definition.h</label>
        <link refid="definition_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="211">
        <label>headers/traitement/images.h</label>
        <link refid="images.h"/>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>sources/traitement/images.cpp</label>
        <link refid="images_8cpp"/>
      </node>
      <node id="212">
        <label>headers/core.h</label>
        <link refid="core_8h"/>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
      </node>
      <node id="214">
        <label>sources/core.cpp</label>
        <link refid="core_8cpp"/>
      </node>
      <node id="213">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classImagesP" prot="public">ImagesP</innerclass>
    <innernamespace refid="namespacecv">cv</innernamespace>
    <innernamespace refid="namespacearuco">aruco</innernamespace>
    <briefdescription>
<para>can initialize all variables  call in constructor (private function) </para>    </briefdescription>
    <detaileddescription>
<para>processing markers from list  call in start() (private function)</para><para><simplesect kind="version"><para>1.0</para><simplesectsep/><para>1.0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::vector&lt;Marker&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>Markers vector of Markers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Point2f</parametername>
</parameternamelist>
<parameterdescription>
<para>centerPt center of frame</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="version"><para>1.0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int16_t</parametername>
</parameternamelist>
<parameterdescription>
<para>x_matrix x to 0 from 24 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int16_t</parametername>
</parameternamelist>
<parameterdescription>
<para>y_matrix y tp 0 from 24</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="version"><para>1.0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Point2f</parametername>
</parameternamelist>
<parameterdescription>
<para>center center of frame </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int16_t</parametername>
</parameternamelist>
<parameterdescription>
<para>x_pixel </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>IMAGES_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IMAGES_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;aruco/aruco.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;aruco/cvdrawingutils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/highgui/highgui.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;opencv2/imgproc/imgproc.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../definition.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cv;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">aruco;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*image<sp/>processing*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classImagesP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classImagesP" kindref="compound">ImagesP</ref>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classImagesP" kindref="compound">ImagesP</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classImagesP" kindref="compound">ImagesP</ref>();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startBlock();</highlight></codeline>
<codeline lineno="24" refid="classImagesP_1ab9e279526694a7ce421cfa11b9309ed1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Point&gt;<sp/><ref refid="classImagesP_1ab9e279526694a7ce421cfa11b9309ed1" kindref="member">all_block</ref>;</highlight></codeline>
<codeline lineno="25" refid="classImagesP_1a79d1d01bae703caeee1033425e4f8f18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Point<sp/><ref refid="classImagesP_1a79d1d01bae703caeee1033425e4f8f18" kindref="member">posCar</ref>,<sp/>posArrival;</highlight></codeline>
<codeline lineno="26" refid="classImagesP_1a39c69bdd9469b4b8a2c9666e27afa7b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classImagesP_1a39c69bdd9469b4b8a2c9666e27afa7b0" kindref="member">angleCar</ref>,<sp/>angleArrival;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>saveCalib(std::string<sp/>str);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>Point2f<sp/>loadCalib();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calibration();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>Point<sp/>getCarPosition();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>Point<sp/>getArrivalPosition();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>getSizeMarker();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>trackingCar();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36" refid="classImagesP_1a43a0e66ed75a147c27474937f8c9112c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MarkerDetector<sp/><ref refid="classImagesP_1a43a0e66ed75a147c27474937f8c9112c" kindref="member">MDetector</ref>;</highlight></codeline>
<codeline lineno="37" refid="classImagesP_1ac2813bc8a3edac420df686902806172c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Marker&gt;<sp/><ref refid="classImagesP_1ac2813bc8a3edac420df686902806172c" kindref="member">Markers</ref>;</highlight></codeline>
<codeline lineno="38" refid="classImagesP_1add620ec27d299fe470cade4a6bc1e632" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/><ref refid="classImagesP_1add620ec27d299fe470cade4a6bc1e632" kindref="member">markerImg</ref>,<sp/>markerCpy;</highlight></codeline>
<codeline lineno="39" refid="classImagesP_1a143a67baa23fdc4b1c28beda0bd964f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VideoCapture<sp/><ref refid="classImagesP_1a143a67baa23fdc4b1c28beda0bd964f5" kindref="member">cap</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>markersProcessing(Point2f<sp/>centerPt);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>Point<sp/>getXYMatrix(int16_t<sp/>x_matrix,<sp/>int16_t<sp/>y_matrix);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>Point2f<sp/>getBlockMatrice(Point2f<sp/>center,<sp/>int16_t<sp/>x_pixel,<sp/>int16_t<sp/>y_pixel);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getAngle(Marker<sp/>marker);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawMatrix(Mat&amp;<sp/>frame,<sp/>Point<sp/>center);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>willbeBlock(Mat&amp;<sp/>frame,<sp/>Point<sp/>leftTop,<sp/>int8_t<sp/>pixelMax);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fillRotatedRect(Mat&amp;<sp/>frame,<sp/>Point2f<sp/>center,<sp/>Size2f<sp/>size,<sp/>Scalar<sp/>color,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/traitement/images.h"/>
  </compounddef>
</doxygen>
