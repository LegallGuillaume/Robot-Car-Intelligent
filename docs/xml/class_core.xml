<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_core" kind="class" prot="public">
    <compoundname>Core</compoundname>
    <includes refid="core_8h" local="no">core.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_core_1a2eaa56d6855905faec8a1764db40892b" prot="private" static="no" mutable="no">
        <type>struct <ref refid="struct__state_machine" kindref="compound">_stateMachine</ref></type>
        <definition>struct _stateMachine Core::stateMachine</definition>
        <argsstring></argsstring>
        <name>stateMachine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="95" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="99" bodyend="-1"/>
        <referencedby refid="class_core_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="88">start</referencedby>
        <referencedby refid="class_core_1a2ad48b714f575d3f3c25c80ffa72afad" compoundref="core_8cpp" startline="90" endline="101">init</referencedby>
        <referencedby refid="class_core_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="107" endline="114">setMode</referencedby>
        <referencedby refid="class_core_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="116" endline="164">autoVirtualMode</referencedby>
        <referencedby refid="class_core_1a2d832a5e544b5e76d03a7fd596522b42" compoundref="core_8cpp" startline="182" endline="192">calibration</referencedby>
        <referencedby refid="class_core_1a8648fac82f0324cead88c8fa2731b286" compoundref="core_8cpp" startline="194" endline="216">blockProcessing</referencedby>
        <referencedby refid="class_core_1a333060e38c961d6fbf4ba4d01a84e48b" compoundref="core_8cpp" startline="218" endline="237">pathfinding</referencedby>
        <referencedby refid="class_core_1a185801ec33fe24b0f36e4d9e474403ca" compoundref="core_8cpp" startline="248" endline="254">trajectory</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_core_1a92f7a9f089b3dca665ec0537fb554d1b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Core::changeMode</definition>
        <argsstring></argsstring>
        <name>changeMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="100" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="100" bodyend="-1"/>
        <referencedby refid="class_core_1a2ad48b714f575d3f3c25c80ffa72afad" compoundref="core_8cpp" startline="90" endline="101">init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_core_1a05fa4660e945441b917880d1e148c89a" prot="private" static="no" mutable="no">
        <type><ref refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911" kindref="member">Mode</ref></type>
        <definition>Mode Core::avm_mode</definition>
        <argsstring></argsstring>
        <name>avm_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="101" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="101" bodyend="-1"/>
        <referencedby refid="class_core_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="88">start</referencedby>
        <referencedby refid="class_core_1a0d0ccf9b40761ed8f88fe1d9a348fc02" compoundref="core_8cpp" startline="103" endline="105">getCurrentMode</referencedby>
        <referencedby refid="class_core_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="107" endline="114">setMode</referencedby>
        <referencedby refid="class_core_1a9677503611528b6d6f2039eff6f80912" compoundref="core_8cpp" startline="171" endline="175">listenIPC</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_core_1a834f8de7a2b8f18b19af83d6c05b9b3a" prot="private" static="no" mutable="no">
        <type><ref refid="class_manager" kindref="compound">Manager</ref> *</type>
        <definition>Manager* Core::manager</definition>
        <argsstring></argsstring>
        <name>manager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="103" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="103" bodyend="-1"/>
        <referencedby refid="class_core_1a776f8c46504b14183883c6273f93eaed" compoundref="core_8cpp" startline="9" endline="16">~Core</referencedby>
        <referencedby refid="class_core_1ae03caf8d8abe9d4c3b875c6f6a5d40dd" compoundref="core_8cpp" startline="18" endline="61">drawDebug</referencedby>
        <referencedby refid="class_core_1a2ad48b714f575d3f3c25c80ffa72afad" compoundref="core_8cpp" startline="90" endline="101">init</referencedby>
        <referencedby refid="class_core_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="107" endline="114">setMode</referencedby>
        <referencedby refid="class_core_1a8648fac82f0324cead88c8fa2731b286" compoundref="core_8cpp" startline="194" endline="216">blockProcessing</referencedby>
        <referencedby refid="class_core_1a333060e38c961d6fbf4ba4d01a84e48b" compoundref="core_8cpp" startline="218" endline="237">pathfinding</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_core_1a7a18e37fde7d3ca4b1568225b51eaf0d" prot="private" static="no" mutable="no">
        <type><ref refid="class_images_p" kindref="compound">ImagesP</ref> *</type>
        <definition>ImagesP* Core::process</definition>
        <argsstring></argsstring>
        <name>process</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="104" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="104" bodyend="-1"/>
        <referencedby refid="class_core_1a776f8c46504b14183883c6273f93eaed" compoundref="core_8cpp" startline="9" endline="16">~Core</referencedby>
        <referencedby refid="class_core_1a2d832a5e544b5e76d03a7fd596522b42" compoundref="core_8cpp" startline="182" endline="192">calibration</referencedby>
        <referencedby refid="class_core_1a8648fac82f0324cead88c8fa2731b286" compoundref="core_8cpp" startline="194" endline="216">blockProcessing</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_core_1a55b925c8acc13a0002112d48a054984e" prot="private" static="no" mutable="no">
        <type><ref refid="class_path_finding" kindref="compound">PathFinding</ref> *</type>
        <definition>PathFinding* Core::path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="105" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="105" bodyend="-1"/>
        <referencedby refid="class_core_1a776f8c46504b14183883c6273f93eaed" compoundref="core_8cpp" startline="9" endline="16">~Core</referencedby>
        <referencedby refid="class_core_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="107" endline="114">setMode</referencedby>
        <referencedby refid="class_core_1a333060e38c961d6fbf4ba4d01a84e48b" compoundref="core_8cpp" startline="218" endline="237">pathfinding</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_core_1a14e63188e0aa7c4a6f72d5501384d1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Core::Core</definition>
        <argsstring>()</argsstring>
        <name>Core</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="57" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="5" bodyend="7"/>
        <references refid="class_core_1a2ad48b714f575d3f3c25c80ffa72afad" compoundref="core_8cpp" startline="90" endline="101">init</references>
      </memberdef>
      <memberdef kind="function" id="class_core_1a776f8c46504b14183883c6273f93eaed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Core::~Core</definition>
        <argsstring>()</argsstring>
        <name>~Core</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="65" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="9" bodyend="16"/>
        <references refid="class_core_1a55b925c8acc13a0002112d48a054984e" compoundref="core_8h" startline="105">path</references>
        <references refid="class_core_1a7a18e37fde7d3ca4b1568225b51eaf0d" compoundref="core_8h" startline="104">process</references>
        <references refid="class_core_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="103">manager</references>
      </memberdef>
      <memberdef kind="function" id="class_core_1a722434c9873d07d6b26a74e40e08eb9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="75" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="63" bodyend="88"/>
        <references refid="class_core_1a9677503611528b6d6f2039eff6f80912" compoundref="core_8cpp" startline="171" endline="175">listenIPC</references>
        <references refid="class_core_1a05fa4660e945441b917880d1e148c89a" compoundref="core_8h" startline="101">avm_mode</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911acf535b39ede8798cd6b56d99271afeef">Stop_Mode</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911a62a2c1fd120cdb7005bf42408c887d9d">Auto_Mode</references>
        <references refid="class_core_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="116" endline="164">autoVirtualMode</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911a6879e8dabec58a1e3e670eaddfdc7bf7">Virtual_Mode</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911a493c3024fdbbce51ec6d8d8b0feacf13">Manual_Mode</references>
        <references refid="class_core_1afcdd1611a6528fd3d597d719405493b4" compoundref="core_8cpp" startline="166" endline="168">manualMode</references>
        <references refid="class_core_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="99">stateMachine</references>
        <references refid="struct__state_machine_1a79ce614ae01c3759d155c03026384ca7" compoundref="core_8h" startline="33">_stateMachine::_statePathfinding</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <references refid="definition_8h_1ad72dbcf6d0153db1b8d8a58001feed83" compoundref="definition_8h" startline="5">DEBUG</references>
        <references refid="class_core_1ae03caf8d8abe9d4c3b875c6f6a5d40dd" compoundref="core_8cpp" startline="18" endline="61">drawDebug</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="5" endline="9">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1a01ec355d4fc9be14623bb7b249ad9562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_core_1a85d7a4a5672973830aa10185b121ded9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="95" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_core_1ae03caf8d8abe9d4c3b875c6f6a5d40dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Core::drawDebug</definition>
        <argsstring>(Mat &amp;frame)</argsstring>
        <name>drawDebug</name>
        <param>
          <type>Mat &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="115" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="18" bodyend="61"/>
        <references refid="class_core_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="103">manager</references>
        <references refid="class_manager_1ad9b3bf0343fe49922b1874dcb2b5c6ca" compoundref="manager_8h" startline="39">Manager::path</references>
        <references refid="class_path_1a1aeccb79c82441549c27f7874f78856e" compoundref="path_8h" startline="29">Path::list_path</references>
        <references refid="class_manager_1a9301f6e9bd2feee2719b2ff82b49a85e" compoundref="manager_8h" startline="38">Manager::block</references>
        <references refid="class_block_1a45c3e71b45b9ef6364eac9354563aedd" compoundref="block_8h" startline="29">Block::list_block</references>
        <references refid="class_manager_1a2803dff8e8f2912242f4098991d91415" compoundref="manager_8h" startline="37">Manager::car</references>
        <references refid="class_car_1a20dd521474ee36b144bde58e3359eed6" compoundref="car_8h" startline="33" endline="35">Car::getPosition</references>
        <references refid="class_manager_1aec87028a71ab7b031977ac12a086658d" compoundref="manager_8h" startline="40">Manager::end</references>
        <references refid="class_end_1ac1365bd526e9ca1f5c8e9d80dc750a36" compoundref="end_8h" startline="34" endline="36">End::getPosition</references>
        <referencedby refid="class_core_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="88">start</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1a2ad48b714f575d3f3c25c80ffa72afad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="126" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="90" bodyend="101"/>
        <references refid="class_core_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="103">manager</references>
        <references refid="class_manager_1a5d783bd86e9be93235898a46de80847f" compoundref="manager_8cpp" startline="8" endline="13">Manager::getInstance</references>
        <references refid="class_manager_1aaabcb64f4b95fcd10a778c3c033439fb" compoundref="manager_8h" startline="95" endline="113">Manager::initArea</references>
        <references refid="class_core_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="99">stateMachine</references>
        <references refid="struct__state_machine_1aaee24e4ab99a6f1243a46645188de8d0" compoundref="core_8h" startline="29">_stateMachine::_stateServer</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ab50339a10e1de285ac99d4c3990b8693">NONE</references>
        <references refid="struct__state_machine_1aa6cc70d0567b403fb9e993a681f48b85" compoundref="core_8h" startline="30">_stateMachine::_stateIPC</references>
        <references refid="struct__state_machine_1a157036ced733a021849ebcbc98c27200" compoundref="core_8h" startline="31">_stateMachine::_stateCalibration</references>
        <references refid="struct__state_machine_1adbc0e51d4bed9b6da5c44e921e37dc32" compoundref="core_8h" startline="32">_stateMachine::_stateImageBlock</references>
        <references refid="struct__state_machine_1a79ce614ae01c3759d155c03026384ca7" compoundref="core_8h" startline="33">_stateMachine::_statePathfinding</references>
        <references refid="struct__state_machine_1a88c6e0c15cdd29b3eec2e842fa09b08f" compoundref="core_8h" startline="34">_stateMachine::_stateTrajectory</references>
        <references refid="class_core_1a92f7a9f089b3dca665ec0537fb554d1b" compoundref="core_8h" startline="100">changeMode</references>
        <references refid="class_core_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="107" endline="114">setMode</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911acf535b39ede8798cd6b56d99271afeef">Stop_Mode</references>
        <referencedby refid="class_core_1a14e63188e0aa7c4a6f72d5501384d1f9" compoundref="core_8cpp" startline="5" endline="7">Core</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1a2197457d525b6f0eface1f8712fd2084" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::restartServer</definition>
        <argsstring>()</argsstring>
        <name>restartServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_core_1a1dac5f63296f11309c2f25770b30912b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Core::setMode</definition>
        <argsstring>(Mode _mode)</argsstring>
        <name>setMode</name>
        <param>
          <type><ref refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911" kindref="member">Mode</ref></type>
          <declname>_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="145" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="107" bodyend="114"/>
        <references refid="class_core_1a05fa4660e945441b917880d1e148c89a" compoundref="core_8h" startline="101">avm_mode</references>
        <references refid="class_core_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="103">manager</references>
        <references refid="class_manager_1a8cb433965677ad622ee43d59e24262e7" compoundref="manager_8cpp" startline="73" endline="79">Manager::reset</references>
        <references refid="class_core_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="99">stateMachine</references>
        <references refid="struct__state_machine_1adbc0e51d4bed9b6da5c44e921e37dc32" compoundref="core_8h" startline="32">_stateMachine::_stateImageBlock</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ab50339a10e1de285ac99d4c3990b8693">NONE</references>
        <references refid="struct__state_machine_1a79ce614ae01c3759d155c03026384ca7" compoundref="core_8h" startline="33">_stateMachine::_statePathfinding</references>
        <references refid="struct__state_machine_1a88c6e0c15cdd29b3eec2e842fa09b08f" compoundref="core_8h" startline="34">_stateMachine::_stateTrajectory</references>
        <references refid="class_core_1a55b925c8acc13a0002112d48a054984e" compoundref="core_8h" startline="105">path</references>
        <referencedby refid="class_core_1a2ad48b714f575d3f3c25c80ffa72afad" compoundref="core_8cpp" startline="90" endline="101">init</referencedby>
        <referencedby refid="class_core_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="116" endline="164">autoVirtualMode</referencedby>
        <referencedby refid="class_core_1a9677503611528b6d6f2039eff6f80912" compoundref="core_8cpp" startline="171" endline="175">listenIPC</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1a0d0ccf9b40761ed8f88fe1d9a348fc02" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911" kindref="member">Mode</ref></type>
        <definition>Mode Core::getCurrentMode</definition>
        <argsstring>()</argsstring>
        <name>getCurrentMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="155" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="103" bodyend="105"/>
        <references refid="class_core_1a05fa4660e945441b917880d1e148c89a" compoundref="core_8h" startline="101">avm_mode</references>
      </memberdef>
      <memberdef kind="function" id="class_core_1a9677503611528b6d6f2039eff6f80912" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Core::listenIPC</definition>
        <argsstring>()</argsstring>
        <name>listenIPC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="162" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="171" bodyend="175"/>
        <references refid="class_core_1a05fa4660e945441b917880d1e148c89a" compoundref="core_8h" startline="101">avm_mode</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911a62a2c1fd120cdb7005bf42408c887d9d">Auto_Mode</references>
        <references refid="class_core_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="107" endline="114">setMode</references>
        <referencedby refid="class_core_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="88">start</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1a7fab8414125602f9f595143bb21d24c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Core::autoVirtualMode</definition>
        <argsstring>(bool is_auto)</argsstring>
        <name>autoVirtualMode</name>
        <param>
          <type>bool</type>
          <declname>is_auto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="171" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="116" bodyend="164"/>
        <references refid="class_core_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="99">stateMachine</references>
        <references refid="struct__state_machine_1aaee24e4ab99a6f1243a46645188de8d0" compoundref="core_8h" startline="29">_stateMachine::_stateServer</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ab50339a10e1de285ac99d4c3990b8693">NONE</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ac2f3f489a00553e7a01d369c103c7251">NO</references>
        <references refid="class_core_1a2a8efb95fadd86481ba62c98b72c7f1c" compoundref="core_8cpp" startline="177" endline="180">server</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</references>
        <references refid="definition_8h_1ae6a018075cd2ce88abd30abf84807fac" compoundref="definition_8h" startline="54" endline="60">debug</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <references refid="struct__state_machine_1a157036ced733a021849ebcbc98c27200" compoundref="core_8h" startline="31">_stateMachine::_stateCalibration</references>
        <references refid="class_core_1a2d832a5e544b5e76d03a7fd596522b42" compoundref="core_8cpp" startline="182" endline="192">calibration</references>
        <references refid="struct__state_machine_1adbc0e51d4bed9b6da5c44e921e37dc32" compoundref="core_8h" startline="32">_stateMachine::_stateImageBlock</references>
        <references refid="class_core_1a8648fac82f0324cead88c8fa2731b286" compoundref="core_8cpp" startline="194" endline="216">blockProcessing</references>
        <references refid="struct__state_machine_1a79ce614ae01c3759d155c03026384ca7" compoundref="core_8h" startline="33">_stateMachine::_statePathfinding</references>
        <references refid="class_core_1a333060e38c961d6fbf4ba4d01a84e48b" compoundref="core_8cpp" startline="218" endline="237">pathfinding</references>
        <references refid="struct__state_machine_1a88c6e0c15cdd29b3eec2e842fa09b08f" compoundref="core_8h" startline="34">_stateMachine::_stateTrajectory</references>
        <references refid="class_core_1a185801ec33fe24b0f36e4d9e474403ca" compoundref="core_8cpp" startline="248" endline="254">trajectory</references>
        <references refid="class_core_1a1dac5f63296f11309c2f25770b30912b" compoundref="core_8cpp" startline="107" endline="114">setMode</references>
        <references refid="core_8h_1a46c8a310cf4c094f8c80e1cb8dc1f911acf535b39ede8798cd6b56d99271afeef">Stop_Mode</references>
        <referencedby refid="class_core_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="88">start</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1afcdd1611a6528fd3d597d719405493b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Core::manualMode</definition>
        <argsstring>()</argsstring>
        <name>manualMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="178" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="166" bodyend="168"/>
        <referencedby refid="class_core_1a722434c9873d07d6b26a74e40e08eb9c" compoundref="core_8cpp" startline="63" endline="88">start</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1a2d832a5e544b5e76d03a7fd596522b42" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref></type>
        <definition>State Core::calibration</definition>
        <argsstring>()</argsstring>
        <name>calibration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="189" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="182" bodyend="192"/>
        <references refid="class_core_1a7a18e37fde7d3ca4b1568225b51eaf0d" compoundref="core_8h" startline="104">process</references>
        <references refid="class_images_p_1a799c4550d96659d7d188b03f52bb9f4a" compoundref="images_8cpp" startline="198" endline="228">ImagesP::calibration</references>
        <references refid="class_images_p_1a4048e5f515cb51cbf25211ec8b4854b7" compoundref="images_8cpp" startline="177" endline="196">ImagesP::loadCalib</references>
        <references refid="class_core_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="99">stateMachine</references>
        <references refid="struct__state_machine_1a157036ced733a021849ebcbc98c27200" compoundref="core_8h" startline="31">_stateMachine::_stateCalibration</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</references>
        <referencedby refid="class_core_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="116" endline="164">autoVirtualMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1a8648fac82f0324cead88c8fa2731b286" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref></type>
        <definition>State Core::blockProcessing</definition>
        <argsstring>(bool is_auto)</argsstring>
        <name>blockProcessing</name>
        <param>
          <type>bool</type>
          <declname>is_auto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="200" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="194" bodyend="216"/>
        <references refid="definition_8h_1ae6a018075cd2ce88abd30abf84807fac" compoundref="definition_8h" startline="54" endline="60">debug</references>
        <references refid="class_core_1a7a18e37fde7d3ca4b1568225b51eaf0d" compoundref="core_8h" startline="104">process</references>
        <references refid="class_images_p_1ae2aecf8db20e7b3bcd14a7182dfdaf29" compoundref="images_8cpp" startline="230" endline="238">ImagesP::startBlock</references>
        <references refid="class_images_p_1ab9e279526694a7ce421cfa11b9309ed1" compoundref="images_8h" startline="25">ImagesP::all_block</references>
        <references refid="class_core_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="103">manager</references>
        <references refid="class_manager_1a9301f6e9bd2feee2719b2ff82b49a85e" compoundref="manager_8h" startline="38">Manager::block</references>
        <references refid="class_block_1aed3bcda97836cd92c2856e5c5e06e883" compoundref="block_8cpp" startline="16" endline="19">Block::add</references>
        <references refid="definition_8h_1ad72dbcf6d0153db1b8d8a58001feed83" compoundref="definition_8h" startline="5">DEBUG</references>
        <references refid="class_images_p_1a002bb2f3148a85c46c954dcc98ad2760" compoundref="images_8cpp" startline="15" endline="17">ImagesP::getSizeMarker</references>
        <references refid="class_manager_1a2803dff8e8f2912242f4098991d91415" compoundref="manager_8h" startline="37">Manager::car</references>
        <references refid="class_car_1a97e3c5de8eb65659ef520de6591f814d" compoundref="car_8h" startline="29" endline="32">Car::setPosition</references>
        <references refid="class_images_p_1afe9cff50f49fc67bd8938d8d0223fe81" compoundref="images_8cpp" startline="240" endline="242">ImagesP::getCarPosition</references>
        <references refid="class_manager_1aec87028a71ab7b031977ac12a086658d" compoundref="manager_8h" startline="40">Manager::end</references>
        <references refid="class_end_1a5be9587f22c8eb23249513a7b5e6db92" compoundref="end_8h" startline="29" endline="33">End::setPosition</references>
        <references refid="class_images_p_1aaf0d33634f747f1defec833fbc6dfae2" compoundref="images_8cpp" startline="245" endline="247">ImagesP::getArrivalPosition</references>
        <references refid="class_manager_1af43da42550bd9746c5ea61a6aeee80de" compoundref="manager_8cpp" startline="15" endline="37">Manager::update</references>
        <references refid="class_images_p_1a3c43049bf1ce2da9ffa88841e48c29e1" compoundref="images_8cpp" startline="167" endline="169">ImagesP::readyForPath</references>
        <references refid="class_core_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="99">stateMachine</references>
        <references refid="struct__state_machine_1adbc0e51d4bed9b6da5c44e921e37dc32" compoundref="core_8h" startline="32">_stateMachine::_stateImageBlock</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</references>
        <referencedby refid="class_core_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="116" endline="164">autoVirtualMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1a333060e38c961d6fbf4ba4d01a84e48b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref></type>
        <definition>State Core::pathfinding</definition>
        <argsstring>()</argsstring>
        <name>pathfinding</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="209" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="218" bodyend="237"/>
        <references refid="definition_8h_1ae6a018075cd2ce88abd30abf84807fac" compoundref="definition_8h" startline="54" endline="60">debug</references>
        <references refid="class_core_1a55b925c8acc13a0002112d48a054984e" compoundref="core_8h" startline="105">path</references>
        <references refid="class_core_1a834f8de7a2b8f18b19af83d6c05b9b3a" compoundref="core_8h" startline="103">manager</references>
        <references refid="class_manager_1a963d327a438d93b100ff68b475d2cf83" compoundref="manager_8h" startline="72" endline="74">Manager::getGeneralTable</references>
        <references refid="class_manager_1a60f89ec1bf61d37a74b4cd67a57d5702" compoundref="manager_8h" startline="83" endline="85">Manager::getSceneSquare</references>
        <references refid="class_manager_1a2803dff8e8f2912242f4098991d91415" compoundref="manager_8h" startline="37">Manager::car</references>
        <references refid="class_car_1a20dd521474ee36b144bde58e3359eed6" compoundref="car_8h" startline="33" endline="35">Car::getPosition</references>
        <references refid="class_manager_1aec87028a71ab7b031977ac12a086658d" compoundref="manager_8h" startline="40">Manager::end</references>
        <references refid="class_end_1ac1365bd526e9ca1f5c8e9d80dc750a36" compoundref="end_8h" startline="34" endline="36">End::getPosition</references>
        <references refid="class_path_finding_1a8d70d17f06400cdcd5787331d7be38e2" compoundref="pathfinding_8h" startline="70" endline="72">PathFinding::hasPossibility</references>
        <references refid="class_core_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="99">stateMachine</references>
        <references refid="struct__state_machine_1a79ce614ae01c3759d155c03026384ca7" compoundref="core_8h" startline="33">_stateMachine::_statePathfinding</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ac2f3f489a00553e7a01d369c103c7251">NO</references>
        <references refid="class_path_finding_1a536055d11c630edc210d100d832a5ccf" compoundref="pathfinding_8h" startline="81" endline="100">PathFinding::getPath</references>
        <references refid="class_manager_1ad9b3bf0343fe49922b1874dcb2b5c6ca" compoundref="manager_8h" startline="39">Manager::path</references>
        <references refid="class_path_1a0b82136bc60497245fef11070a74061b" compoundref="path_8cpp" startline="16" endline="19">Path::add</references>
        <references refid="class_manager_1af43da42550bd9746c5ea61a6aeee80de" compoundref="manager_8cpp" startline="15" endline="37">Manager::update</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <referencedby refid="class_core_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="116" endline="164">autoVirtualMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1a2a8efb95fadd86481ba62c98b72c7f1c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref></type>
        <definition>State Core::server</definition>
        <argsstring>()</argsstring>
        <name>server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="218" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="177" bodyend="180"/>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <referencedby refid="class_core_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="116" endline="164">autoVirtualMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1a185801ec33fe24b0f36e4d9e474403ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" kindref="member">State</ref></type>
        <definition>State Core::trajectory</definition>
        <argsstring>()</argsstring>
        <name>trajectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="227" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="248" bodyend="254"/>
        <references refid="class_core_1a2eaa56d6855905faec8a1764db40892b" compoundref="core_8h" startline="99">stateMachine</references>
        <references refid="struct__state_machine_1a88c6e0c15cdd29b3eec2e842fa09b08f" compoundref="core_8h" startline="34">_stateMachine::_stateTrajectory</references>
        <references refid="core_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae0aa021e21dddbd6d8cecec71e9cf564">OK</references>
        <referencedby refid="class_core_1a7fab8414125602f9f595143bb21d24c1" compoundref="core_8cpp" startline="116" endline="164">autoVirtualMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_core_1a180fe625431721a94959a694fe91ef3f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::forward</definition>
        <argsstring>(float angle)</argsstring>
        <name>forward</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="230" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_core_1a0639e803afd1447272759b6b0fa22f60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Core::rotation</definition>
        <argsstring>(float angle)</argsstring>
        <name>rotation</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="231" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/sources/core.cpp" bodystart="244" bodyend="246"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="74">
        <label>Core</label>
        <link refid="class_core"/>
        <childnode refid="75" relation="usage">
          <edgelabel>path</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>process</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>stateMachine</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>manager</edgelabel>
        </childnode>
      </node>
      <node id="84">
        <label>Block</label>
        <link refid="class_block"/>
        <childnode refid="81" relation="public-inheritance">
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>instance</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>Manager</label>
        <link refid="class_manager"/>
        <childnode refid="80" relation="usage">
          <edgelabel>path</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>end</edgelabel>
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>block</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>instance</edgelabel>
        </childnode>
        <childnode refid="85" relation="usage">
          <edgelabel>car</edgelabel>
        </childnode>
      </node>
      <node id="78">
        <label>_stateMachine</label>
        <link refid="struct__state_machine"/>
      </node>
      <node id="80">
        <label>Path</label>
        <link refid="class_path"/>
        <childnode refid="81" relation="public-inheritance">
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>instance</edgelabel>
        </childnode>
      </node>
      <node id="82">
        <label>End</label>
        <link refid="class_end"/>
        <childnode refid="83" relation="public-inheritance">
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>instance</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>ImagesP</label>
        <link refid="class_images_p"/>
      </node>
      <node id="76">
        <label>Cell</label>
        <link refid="class_cell"/>
        <childnode refid="76" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
      </node>
      <node id="81">
        <label>MultipleObject</label>
        <link refid="class_multiple_object"/>
      </node>
      <node id="85">
        <label>Car</label>
        <link refid="class_car"/>
        <childnode refid="83" relation="public-inheritance">
        </childnode>
        <childnode refid="85" relation="usage">
          <edgelabel>instance</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>SimpleObject</label>
        <link refid="class_simple_object"/>
      </node>
      <node id="75">
        <label>PathFinding</label>
        <link refid="class_path_finding"/>
        <childnode refid="76" relation="usage">
          <edgelabel>_pathfinding</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" line="49" column="1" bodyfile="/home/glegall/prog_workspace/Robot_car/prog/headers/core.h" bodystart="49" bodyend="233"/>
    <listofallmembers>
      <member refid="class_core_1a7fab8414125602f9f595143bb21d24c1" prot="private" virt="non-virtual"><scope>Core</scope><name>autoVirtualMode</name></member>
      <member refid="class_core_1a05fa4660e945441b917880d1e148c89a" prot="private" virt="non-virtual"><scope>Core</scope><name>avm_mode</name></member>
      <member refid="class_core_1a8648fac82f0324cead88c8fa2731b286" prot="private" virt="non-virtual"><scope>Core</scope><name>blockProcessing</name></member>
      <member refid="class_core_1a2d832a5e544b5e76d03a7fd596522b42" prot="private" virt="non-virtual"><scope>Core</scope><name>calibration</name></member>
      <member refid="class_core_1a92f7a9f089b3dca665ec0537fb554d1b" prot="private" virt="non-virtual"><scope>Core</scope><name>changeMode</name></member>
      <member refid="class_core_1a14e63188e0aa7c4a6f72d5501384d1f9" prot="public" virt="non-virtual"><scope>Core</scope><name>Core</name></member>
      <member refid="class_core_1ae03caf8d8abe9d4c3b875c6f6a5d40dd" prot="private" virt="non-virtual"><scope>Core</scope><name>drawDebug</name></member>
      <member refid="class_core_1a180fe625431721a94959a694fe91ef3f" prot="private" virt="non-virtual"><scope>Core</scope><name>forward</name></member>
      <member refid="class_core_1a0d0ccf9b40761ed8f88fe1d9a348fc02" prot="private" virt="non-virtual"><scope>Core</scope><name>getCurrentMode</name></member>
      <member refid="class_core_1a2ad48b714f575d3f3c25c80ffa72afad" prot="private" virt="non-virtual"><scope>Core</scope><name>init</name></member>
      <member refid="class_core_1a9677503611528b6d6f2039eff6f80912" prot="private" virt="non-virtual"><scope>Core</scope><name>listenIPC</name></member>
      <member refid="class_core_1a834f8de7a2b8f18b19af83d6c05b9b3a" prot="private" virt="non-virtual"><scope>Core</scope><name>manager</name></member>
      <member refid="class_core_1afcdd1611a6528fd3d597d719405493b4" prot="private" virt="non-virtual"><scope>Core</scope><name>manualMode</name></member>
      <member refid="class_core_1a55b925c8acc13a0002112d48a054984e" prot="private" virt="non-virtual"><scope>Core</scope><name>path</name></member>
      <member refid="class_core_1a333060e38c961d6fbf4ba4d01a84e48b" prot="private" virt="non-virtual"><scope>Core</scope><name>pathfinding</name></member>
      <member refid="class_core_1a7a18e37fde7d3ca4b1568225b51eaf0d" prot="private" virt="non-virtual"><scope>Core</scope><name>process</name></member>
      <member refid="class_core_1a85d7a4a5672973830aa10185b121ded9" prot="public" virt="non-virtual"><scope>Core</scope><name>reset</name></member>
      <member refid="class_core_1a2197457d525b6f0eface1f8712fd2084" prot="private" virt="non-virtual"><scope>Core</scope><name>restartServer</name></member>
      <member refid="class_core_1a0639e803afd1447272759b6b0fa22f60" prot="private" virt="non-virtual"><scope>Core</scope><name>rotation</name></member>
      <member refid="class_core_1a2a8efb95fadd86481ba62c98b72c7f1c" prot="private" virt="non-virtual"><scope>Core</scope><name>server</name></member>
      <member refid="class_core_1a1dac5f63296f11309c2f25770b30912b" prot="private" virt="non-virtual"><scope>Core</scope><name>setMode</name></member>
      <member refid="class_core_1a722434c9873d07d6b26a74e40e08eb9c" prot="public" virt="non-virtual"><scope>Core</scope><name>start</name></member>
      <member refid="class_core_1a2eaa56d6855905faec8a1764db40892b" prot="private" virt="non-virtual"><scope>Core</scope><name>stateMachine</name></member>
      <member refid="class_core_1a01ec355d4fc9be14623bb7b249ad9562" prot="public" virt="non-virtual"><scope>Core</scope><name>stop</name></member>
      <member refid="class_core_1a185801ec33fe24b0f36e4d9e474403ca" prot="private" virt="non-virtual"><scope>Core</scope><name>trajectory</name></member>
      <member refid="class_core_1a776f8c46504b14183883c6273f93eaed" prot="public" virt="non-virtual"><scope>Core</scope><name>~Core</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
