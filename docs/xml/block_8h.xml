<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="block_8h" kind="file">
    <compoundname>block.h</compoundname>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes refid="multipleobject_8h" local="yes">../abstract/multipleobject.h</includes>
    <includes refid="definition_8h" local="yes">../definition.h</includes>
    <includedby refid="manager_8h" local="yes">headers/manager.h</includedby>
    <includedby refid="block_8cpp" local="yes">sources/block.cpp</includedby>
    <incdepgraph>
      <node id="451">
        <label>../abstract/multipleobject.h</label>
        <link refid="multipleobject_8h"/>
        <childnode refid="450" relation="include">
        </childnode>
      </node>
      <node id="450">
        <label>string</label>
      </node>
      <node id="447">
        <label>headers/manager/block.h</label>
        <link refid="block.h"/>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
      </node>
      <node id="449">
        <label>vector</label>
      </node>
      <node id="448">
        <label>utility</label>
      </node>
      <node id="452">
        <label>../definition.h</label>
        <link refid="definition_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="453">
        <label>headers/manager/block.h</label>
        <link refid="block.h"/>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
      </node>
      <node id="455">
        <label>headers/core.h</label>
        <link refid="core_8h"/>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>unitest.cpp</label>
        <link refid="unitest_8cpp"/>
      </node>
      <node id="457">
        <label>sources/core.cpp</label>
        <link refid="core_8cpp"/>
      </node>
      <node id="454">
        <label>headers/manager.h</label>
        <link refid="manager_8h"/>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
      </node>
      <node id="456">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="460">
        <label>sources/manager.cpp</label>
        <link refid="manager_8cpp"/>
      </node>
      <node id="461">
        <label>sources/block.cpp</label>
        <link refid="block_8cpp"/>
      </node>
      <node id="458">
        <label>headers/traitement/pathfinding.h</label>
        <link refid="pathfinding_8h"/>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_block" prot="public">Block</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
    <briefdescription>
<para>Abstract of <ref refid="class_multiple_object" kindref="compound">MultipleObject</ref>  Virtual function. </para>    </briefdescription>
    <detaileddescription>
<para>Design patern singleton  Singleton function.</para><para><simplesect kind="version"><para>1.0</para><simplesectsep/><para>1.0</para></simplesect>
<simplesect kind="return"><para>Block* have <ref refid="class_block" kindref="compound">Block</ref> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>BLOCK_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BLOCK_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//pair&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../abstract/multipleobject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../definition.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_block" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_block" kindref="compound">Block</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_multiple_object" kindref="compound">MultipleObject</ref>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_block" kindref="compound">Block</ref><sp/>*<sp/>getInstance();</highlight></codeline>
<codeline lineno="29" refid="class_block_1a45c3e71b45b9ef6364eac9354563aedd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;pair&lt;int8_t,int8_t&gt;&gt;<sp/>*<ref refid="class_block_1a45c3e71b45b9ef6364eac9354563aedd" kindref="member">list_block</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>add(int8_t<sp/>x,<sp/>int8_t<sp/>y)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(int8_t<sp/>x,<sp/>int8_t<sp/>y)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32" refid="class_block_1a0876bcd3bdb4e627de3e78faa31163c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_block_1a0876bcd3bdb4e627de3e78faa31163c5" kindref="member">set</ref>(std::vector&lt;std::pair&lt;int8_t,<sp/>int8_t&gt;&gt;<sp/>list){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>clear();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(int8_t<sp/>i=0;<sp/>i&lt;list.size();<sp/>++i)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_block-&gt;push_back(list[i]);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(list_block-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has(int8_t<sp/>x,<sp/>int8_t<sp/>y)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41" refid="class_block_1a37bf8cd7e85de983bc56eb19b168575a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_block_1a37bf8cd7e85de983bc56eb19b168575a" kindref="member">clear</ref>()</highlight><highlight class="keyword"><sp/>override</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_block-&gt;clear();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list_block-&gt;size()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>toString()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46" refid="class_block_1a19d1bd0e1cef6a865ed2745a2e648405" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_block_1a19d1bd0e1cef6a865ed2745a2e648405" kindref="member">~Block</ref>(){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]list_block;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_block<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54" refid="class_block_1a4a209ccb8f3dff3c431835e3cf952083" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_block" kindref="compound">Block</ref><sp/>*<sp/><ref refid="class_block_1a4a209ccb8f3dff3c431835e3cf952083" kindref="member">instance</ref>;</highlight></codeline>
<codeline lineno="55" refid="class_block_1a37658a946bf5067ad01d68d9ff086adc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_block_1a37658a946bf5067ad01d68d9ff086adc" kindref="member">Block</ref>(){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_block<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>vector&lt;pair&lt;int8_t,<sp/>int8_t&gt;&gt;();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list_block-&gt;reserve(<ref refid="definition_8h_1a9ddbbce2fd669544c295551b85ca01ff" kindref="member">MAX_BLOC_SCENE</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/block.h"/>
  </compounddef>
</doxygen>
