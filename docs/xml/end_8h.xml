<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="end_8h" kind="file">
    <compoundname>end.h</compoundname>
    <includes local="no">utility</includes>
    <includes local="no">string</includes>
    <includes refid="simpleobject_8h" local="yes">../abstract/simpleobject.h</includes>
    <includedby refid="manager_8h" local="yes">headers/manager.h</includedby>
    <includedby refid="end_8cpp" local="yes">sources/end.cpp</includedby>
    <incdepgraph>
      <node id="476">
        <label>headers/manager/end.h</label>
        <link refid="end.h"/>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
      </node>
      <node id="478">
        <label>string</label>
      </node>
      <node id="477">
        <label>utility</label>
      </node>
      <node id="480">
        <label>sstream</label>
      </node>
      <node id="479">
        <label>../abstract/simpleobject.h</label>
        <link refid="simpleobject_8h"/>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="481">
        <label>headers/manager/end.h</label>
        <link refid="end.h"/>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="489" relation="include">
        </childnode>
      </node>
      <node id="483">
        <label>headers/core.h</label>
        <link refid="core_8h"/>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
      </node>
      <node id="487">
        <label>unitest.cpp</label>
        <link refid="unitest_8cpp"/>
      </node>
      <node id="489">
        <label>sources/end.cpp</label>
        <link refid="end_8cpp"/>
      </node>
      <node id="485">
        <label>sources/core.cpp</label>
        <link refid="core_8cpp"/>
      </node>
      <node id="482">
        <label>headers/manager.h</label>
        <link refid="manager_8h"/>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
      </node>
      <node id="484">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="488">
        <label>sources/manager.cpp</label>
        <link refid="manager_8cpp"/>
      </node>
      <node id="486">
        <label>headers/traitement/pathfinding.h</label>
        <link refid="pathfinding_8h"/>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_end" prot="public">End</innerclass>
    <briefdescription>
<para>Abstract of <ref refid="class_simple_object" kindref="compound">SimpleObject</ref>  Virtual function. </para>    </briefdescription>
    <detaileddescription>
<para>Design patern singleton  Singleton function.</para><para><simplesect kind="version"><para>1.0</para><simplesectsep/><para>1.0</para></simplesect>
<simplesect kind="return"><para>End* have Arrival </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>END_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>END_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//pair&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../abstract/simpleobject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_end" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_end" kindref="compound">End</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_simple_object" kindref="compound">SimpleObject</ref>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_end" kindref="compound">End</ref><sp/>*<sp/>getInstance();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_end_1a5be9587f22c8eb23249513a7b5e6db92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_end_1a5be9587f22c8eb23249513a7b5e6db92" kindref="member">setPosition</ref>(int8_t<sp/>x,<sp/>int8_t<sp/>y)</highlight><highlight class="keyword"><sp/>override</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;first<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;second<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(position-&gt;first<sp/>==<sp/>x<sp/>&amp;&amp;<sp/>position-&gt;second<sp/>==<sp/>y);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34" refid="class_end_1ac1365bd526e9ca1f5c8e9d80dc750a36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pair&lt;int8_t,<sp/>int8_t&gt;<sp/><ref refid="class_end_1ac1365bd526e9ca1f5c8e9d80dc750a36" kindref="member">getPosition</ref>()</highlight><highlight class="keyword"><sp/>override</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*position;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>toString()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38" refid="class_end_1aa3481cbe712c9cdef228786ffa7f0aad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_end_1aa3481cbe712c9cdef228786ffa7f0aad" kindref="member">~End</ref>(){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>position;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="class_end_1a2256d4cf9c23450dfb8f77c631d8a5b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_end" kindref="compound">End</ref><sp/>*<sp/><ref refid="class_end_1a2256d4cf9c23450dfb8f77c631d8a5b8" kindref="member">instance</ref>;</highlight></codeline>
<codeline lineno="47" refid="class_end_1a842874e9ed3602783ab323850621c060" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pair&lt;int8_t,<sp/>int8_t&gt;<sp/>*<ref refid="class_end_1a842874e9ed3602783ab323850621c060" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="48" refid="class_end_1acd25fa8f481c50f5b8eaff4af1159942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_end_1acd25fa8f481c50f5b8eaff4af1159942" kindref="member">End</ref>(){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>pair&lt;int8_t,<sp/>int8_t&gt;();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;first<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position-&gt;second<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/glegall/prog_workspace/Robot_car/prog/headers/manager/end.h"/>
  </compounddef>
</doxygen>
